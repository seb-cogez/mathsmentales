import utils from"./utils.js";import MM from"./MM.js";export default class ficheToPrint{constructor(type,cart,orientation="portrait"){this.type=type,this.activities=cart.activities,this.wsheet="portrait"===orientation?window.open("pagetoprint.html","mywindow","location=no,menubar=no,titlebar=no,width=794"):window.open("pagetoprintlandscape.html","mywindow","location=no,menubar=no,titlebar=no,width=1123"),this.wsheet.onload=function(){MM.fiche.populate()},this.nbq=void 0,"whogots"===this.type&&1===this.activities.length?this.nbq=document.getElementById("cardsNbValue").value:"dominos"===this.type&&1===this.activities.length&&(this.nbq=document.getElementById("dominosNbValue").value)}generateQuestions(){for(let index=0;index<this.activities.length;index++)this.activities[index].initialize();for(let index=0;index<this.activities.length;index++){const activity=this.activities[index];activity.generate(this.nbq)}}populate(){this.wsheet.document.getElementsByTagName("html")[0].className="s"+document.getElementById("exTxtSizeValue").value.replace(".",""),this.content=this.wsheet.document.getElementById("creator-content"),this.docsheet=this.wsheet.document,utils.setSeed(),"exo"===this.type?this.createExoSheet():"exam"===this.type?this.createInterroSheet():"ceinture"===this.type?this.createCeintureSheet():"flashcard"===this.type?(this.generateQuestions(),this.createFlashCards()):"whogots"===this.type?(this.generateQuestions(),this.createWhoGots()):"dominos"===this.type&&(this.generateQuestions(),this.createDominos()),utils.mathRender(this.wsheet),1===MM.carts.length&&1===MM.carts[0].activities.length&&(MM.resetCarts(),MM.editedActivity.display())}create(type,params){let elm=this.docsheet.createElement(type);for(let i in params)elm[i]=params[i];return elm}createExoSheet(){let correction="end",radios=document.getElementsByName("excorr");for(let index=0;index<radios.length;index++)radios[index].checked&&(correction=radios[index].value);let script=this.create("script",{text:"function changecols(dest,nb){document.getElementById(dest).className=\"grid g\"+nb};\n        function pagebreak(){let cor=document.querySelectorAll('.correction'),btn=document.getElementById('btn-break');if(cor[0].className===\"correction\"){for(i=0;i<cor.length;i++){cor[i].className=\"correction pagebreak\";}btn.innerText='Corrigé à la suite des énoncés';}else {for(i=0;i<cor.length;i++){cor[i].className=\"correction\";}btn.innerText='Corrigé sur page séparée';}}\n        "});this.docsheet.head.appendChild(script),"end"===correction&&(this.docsheet.getElementById("creator-menu").innerHTML+="<button id='btn-break' onclick='pagebreak();'>Corrigé sur page séparée</button>"),MM.memory={};for(let qty=0;qty<document.getElementById("exQtyValue").value;qty++){this.generateQuestions(),qty>0&&this.content.appendChild(this.create("footer"));let aleaCode=this.create("div",{className:"floatright",innerHTML:"Clé : "+MM.seed+" p."+(qty+1)});this.content.appendChild(aleaCode);let sheetTitle=document.getElementById("extitle").value||"Fiche d'exercices",header=this.create("header",{innerHTML:sheetTitle});this.content.appendChild(header);let exTitle=document.getElementById("exeachex").value||"Exercice n°",correctionContent=this.create("div",{className:"correction"}),titleCorrection=this.create("header",{className:"clearfix",innerHTML:"Correction des exercices"});"end"===correction&&correctionContent.appendChild(titleCorrection);let divclear=this.create("div",{className:"clearfix"});for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];let sectionEnonce=this.create("section",{id:"enonce"+qty+"-"+i,className:"enonce"}),sectionCorrection=this.create("section",{id:"corrige"+qty+"-"+i}),input=`<input id="nbcols${qty}-${i}" class="noprint fright" value="2" title="Nb de colonnes" type="number" size="2" min="1" max="6" oninput="changecols('ol${qty}-${i}',this.value)">`;sectionEnonce.innerHTML+=input;let h3=this.create("h3",{className:"exercice-title",innerHTML:exTitle+(i+1)+" : "+activity.title});sectionEnonce.appendChild(h3);let ol=this.create("ol",{id:"ol"+qty+"-"+i,className:"grid g2"}),olCorrection=this.create("ol",{className:"corrige"});for(let j=0;j<activity.questions.length;j++){let li=this.create("li",{className:"c3"}),liCorrection=this.create("li");if("latex"===activity.type||""===activity.type||void 0===activity.type){let span=this.create("span",{className:"math",innerHTML:activity.questions[j]}),spanCorrection=this.create("span",{className:"math",innerHTML:activity.answers[j]});li.appendChild(span),liCorrection.appendChild(spanCorrection)}else li.innerHTML=activity.questions[j],liCorrection.innerHTML=activity.answers[j];ol.appendChild(li),void 0!==activity.figures[j]&&(0===i&&0===j&&(MM.memory.dest=this.wsheet),MM.memory[qty+"-f"+i+"-"+j]=new Figure(utils.clone(activity.figures[j]),qty+"-f"+i+"-"+j,li)),olCorrection.appendChild(liCorrection)}sectionEnonce.appendChild(ol);let ds=divclear.cloneNode(!0);if(sectionEnonce.appendChild(ds),"end"!==correction){let hr=this.docsheet.createElement("hr");hr.style.width="50%",sectionEnonce.appendChild(hr),sectionEnonce.appendChild(olCorrection)}else{let h3correction=h3.cloneNode(!0);sectionCorrection.appendChild(h3correction),sectionCorrection.appendChild(olCorrection),correctionContent.appendChild(sectionCorrection)}this.content.appendChild(sectionEnonce)}if(correctionContent.hasChildNodes){this.content.appendChild(correctionContent);let ds=divclear.cloneNode(!0);this.content.appendChild(ds)}}utils.isEmpty(MM.memory)||setTimeout((function(){for(const k in MM.memory)"dest"!==k&&MM.memory[k].display(MM.memory.dest)}),300)}createInterroSheet(){MM.memory={};let script=this.create("script",{text:'\n        function changecols(dest,nb){document.getElementById(dest).className="grid g"+nb};\n        function changeheight(dest,nb){\n            let elts = document.querySelectorAll("#"+dest+" .interro article");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.height = nb+"pt";\n            }\n        }\n        '});this.docsheet.head.appendChild(script);for(let qty=0;qty<document.getElementById("intQtyValue").value;qty++){this.generateQuestions(),qty>0&&this.content.appendChild(this.create("footer"));let aleaCode=this.create("div",{className:"floatright",innerHTML:"Clé : "+MM.seed+" p."+(qty+1)});this.content.appendChild(aleaCode);let sheetTitle=document.getElementById("inttitle").value||"Interrogation écrite",header=this.create("header",{innerHTML:sheetTitle});this.content.appendChild(header);let div1=this.create("div",{className:"studenName",innerHTML:"Nom, prénom, classe :"});this.content.appendChild(div1);let div2=this.create("div",{className:"remarques",innerHTML:"Remarques :"});this.content.appendChild(div2);let exTitle=document.getElementById("inteachex").value||"Exercice n°",correctionContent=this.create("div",{className:"correction"}),titleCorrection=this.create("header",{className:"clearfix",innerHTML:"Correction des exercices"});correctionContent.appendChild(titleCorrection);let divclear=this.create("div",{className:"clearfix"});for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];let sectionEnonce=this.create("section",{id:"section"+qty+"-"+i}),sectionCorrection=this.create("section"),input=`<input id="nbcols${qty}-${i}" class="noprint fright" value="30" title="Taille réponse" type="number" size="3" min="10" max="200" oninput="changeheight('ol${qty}-${i}',this.value)">`;sectionEnonce.innerHTML+=input,input=`<input id="nbcols${qty}-${i}" class="noprint fright" value="2" title="Nb de colonnes" type="number" size="2" min="1" max="6" oninput="changecols('ol${qty}-${i}',this.value)">`,sectionEnonce.innerHTML+=input;let h3=this.create("h3",{className:"exercice-title",innerHTML:exTitle+(i+1)+" : "+activity.title});sectionEnonce.appendChild(h3);let ol=this.create("ol",{id:"ol"+qty+"-"+i,className:"grid g2"}),olCorrection=this.create("ol",{className:"corrige"});for(let j=0;j<activity.questions.length;j++){let li=this.create("li",{className:"interro"}),liCorrection=this.create("li");if("latex"===activity.type||""===activity.type||void 0===activity.type){let span=this.create("span",{className:"math",innerHTML:activity.questions[j]}),spanCorrection=this.create("span",{className:"math",innerHTML:activity.answers[j]});li.appendChild(span),liCorrection.appendChild(spanCorrection)}else li.innerHTML=activity.questions[j],liCorrection.innerHTML=activity.answers[j];ol.appendChild(li),void 0!==activity.figures[j]&&(0===i&&0===j&&(MM.memory.dest=this.wsheet),MM.memory["f"+qty+"-"+i+"-"+j]=new Figure(utils.clone(activity.figures[j]),"f"+qty+"-"+i+"-"+j,li));let article=this.create("article");li.appendChild(article),olCorrection.appendChild(liCorrection)}sectionEnonce.appendChild(ol);let ds=divclear.cloneNode(!0);sectionEnonce.appendChild(ds);let h3correction=h3.cloneNode(!0);sectionCorrection.appendChild(h3correction),sectionCorrection.appendChild(olCorrection),correctionContent.appendChild(sectionCorrection),this.content.appendChild(sectionEnonce)}this.content.appendChild(this.create("footer",{innerHTML:"Fin"})),this.content.appendChild(correctionContent);let ds=divclear.cloneNode(!0);this.content.appendChild(ds)}utils.isEmpty(MM.memory)||setTimeout((function(){for(const k in MM.memory)"dest"!==k&&MM.memory[k].display(MM.memory.dest)}),300)}createCeintureSheet(){MM.memory={};const nbCeintures=document.getElementById("ceintqtyvalue").value,nbcols=Number(document.getElementById("ceintcolsval").value),nbrows=Number(document.getElementById("ceintrowsval").value),posCorrection=utils.getRadioChecked("ceintcorrpos");let script=this.create("script",{text:`\n        let exercicesColumn = Array(${nbcols}).fill("column");\n        let nbcols = ${nbcols};\n        /*\n        * change la hauteur des cases réponses, et de l'élément question si réponse dessous plutôt que dessus\n        */\n        function changeHeight(nb){\n            let elts = document.querySelectorAll(".ans");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.height = nb+"pt";\n            }\n        }\n        /*\n        * change la taille des caractères d'une colonne\n        */\n        function changeFontSize(dest,value){\n            // il peut y avoir plusieurs sujets, donc on doit faire un traitement multiple\n            let elts = document.querySelectorAll(".question"+dest);\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.fontSize = value+"pt";\n            }\n        }\n        /*\n        * change la disposition des lignes d'exercices d'une colonne\n        * dest : id de la colonne où changer la place des réponses.\n        * (String) how : column/columnv pour colonnes en ligne ou verticales\n        */\n        function setDispositionReponse(dest,how){\n            let setr="auto auto",setc="none";\n            if(how==="row"){\n                setr="none";setc="max-content auto";\n            }\n            // il peut y avoir plusieurs sujets, donc on doit faire un traitement multiple\n            let elts = document.querySelectorAll(".col"+dest);\n            for(let i=0;i<elts.length;i++){\n                elts[i].style["grid"] = setr+" / "+setc;\n            }\n        }\n        /*\n        * Change la disposition de toutes les lignes d'exercices\n        */\n        function setDispositionReponseAll(how){\n            let setr="auto auto",setc="none";\n            let selindex = 1;\n            if(how==="row"){\n                setr="none";setc="max-content auto";\n                selindex = 0;\n            }\n            // on sélectionne toutes colonnes\n            let elts = document.querySelectorAll(".ceinture .grid .grid");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style["grid"] = setr+" / "+setc;\n            }\n            // on met les valeurs des autres input à cette valeur\n            let inputs = document.querySelectorAll(".selectpos");\n            for(let i=0;i<inputs.length;i++){\n                inputs[i].selectedIndex = selindex;\n            }\n        }\n        /*\n        * Change la largeur des colonnes\n        */\n        function changeWidth(dest,nb){\n            let elts = document.querySelectorAll(".ceinture-content");\n            if(elts[0].style["grid-template-columns"].indexOf("auto")>-1){\n                for(let i=0;i<elts.length;i++){\n                    let stylecols = elts[i].style["grid-template-columns"].split(" ");\n                    let style = Array(stylecols.length).fill("1fr").join(" ");\n                    elts[i].style["grid-template-columns"] = style;\n                }\n            }\n            for(let i=0;i<elts.length;i++){\n                let style = elts[i].style["grid-template-columns"];\n                let stylecols = style.split(" ");\n                stylecols[dest-1] = nb+"fr";\n                style = stylecols.join(" ");\n                elts[i].style["grid-template-columns"] = style;\n            }\n        }\n        /*\n        * change la couleur du fond des réponses\n        * what : bg (background) || bd (border)\n        */\n       function changeColor(hexa,what){\n           let elts = document.querySelectorAll(".ans");\n           let styleAttr = "background-color";\n           let styleVal = hexa;\n           if(what==="bd"){\n                styleAttr="border";\n                if(hexa==="none")styleVal = "none";\n                else styleVal="1pt solid "+hexa;\n           }\n           for(let i=0;i<elts.length;i++){\n               elts[i].style[styleAttr] = styleVal;\n           }\n       }\n       /** \n        * Change la couleur du cadre des réponses\n        *\n        */\n       function changeBorder(bool){\n        if(bool){\n            changeColor(document.getElementById("colorpicker2").value,'bd');\n        } else {\n            changeColor('none','bd');\n        }\n       }\n       /**\n        * Change l'ordre d'une colonne \n        * (Integer) colId : numéro entier de la colonne (commence par 1)\n        */\n       function changeOrder(colId){\n           // on récupère l'ensemble des tableaux\n            let tableaux = document.querySelectorAll(".ceinture-content");\n            for(let i=0;i<tableaux.length;i++){\n                // on récupère les celulles de la colonne choisie:\n                let cels = tableaux[i].querySelectorAll(".col"+colId);\n                // on crée un tableau des clés de lignes\n                let cles = [...Array(cels.length)].map((a,b)=>b+1);\n                // on mélange les clés\n                cles.sort(()=>Math.random()-0.5);\n                // on met les celulles dans l'ordre\n                for(let j=0;j<cels.length;j++){\n                    cels[j].style["grid-row"]=cles[j];\n                }\n            }\n       }\n\n       `});this.docsheet.head.appendChild(script);let headnoprint=utils.create("section",{className:"noprint",id:"headnoprint"}),correction;headnoprint.innerHTML+='<span>Lignes :</span><input id="inputheight" value="20" title="Hauteur en pt" type="number" size="3" min="10" max="200" oninput="changeHeight(this.value)">',headnoprint.innerHTML+="<span>Texte</span>";for(let i=1;i<=nbcols;i++){let input=`<input id="fsize${i}" value="12" title="Taille énoncé colonne ${i}" type="number" size="3" min="8" max="16" step="0.5" oninput="changeFontSize('${i}',this.value)">`;headnoprint.innerHTML+=input}headnoprint.innerHTML+="<span>Largeur colonne</span>";for(let i=1;i<=nbcols;i++){let input=`<input id="asize${i}" value="1" title="Taille colonne ${i}" type="number" size="3" min="0.5" max="4" step="0.1" oninput="changeWidth(${i},this.value)">`;headnoprint.innerHTML+=input}headnoprint.appendChild(utils.create("br")),headnoprint.innerHTML+="<strong>Réponse</strong> ";for(let i=1;i<=nbcols;i++){let input=`<select class="selectpos" oninput="setDispositionReponse(${i},this.value)">\n            <option value="row">à côté</option>\n            <option value="column">dessous</option>\n            </select>`;headnoprint.innerHTML+=input}headnoprint.innerHTML+='<span>Tous</span> \n        <select oninput="setDispositionReponseAll(this.value)">\n            <option value="row">à côté</option>\n            <option value="column">dessous</option>\n            </select>',headnoprint.innerHTML+=' Coul <input type="color" id="colorpicker" oninput="changeColor(this.value,\'bg\')" value="#ECECEC"> Cadre avec <input type="checkbox" value="true" onclick="changeBorder(this.checked)"> <input type="color" value="#111111" id="colorpicker2" oninput="changeColor(this.value,\'bd\')" size="8">',headnoprint.innerHTML+="<br>Mélanger la colonne : ";for(let i=1;i<=nbcols;i++){let bouton=`<button onclick="changeOrder(${i})">${i}</button> `;headnoprint.innerHTML+=bouton}this.content.appendChild(headnoprint),"fin"===posCorrection&&(correction=utils.create("div",{id:"correction",className:"pagebreak"}),correction.appendChild(utils.create("div",{innerHTML:"Correction"})));for(let qty=0;qty<nbCeintures;qty++){let ceinture=utils.create("div",{className:"ceinture"}),corrige=utils.create("div",{className:"ceintCorrige corrige"});this.generateQuestions();let header=utils.create("div",{className:"ceinture-header"}),bloc1=utils.create("div",{className:"border-black ceinture-titre",innerHTML:document.getElementById("ceinttitle").value||"Ceinture"}),bloc2=utils.create("div",{className:"border-black",innerHTML:"NOM :<br>Classe :"}),cleseed="";document.getElementById("ceintprintToEnonce").checked&&(cleseed="Clé : "+MM.seed+"<br> ");let bloc3=this.create("div",{className:"border-black",innerHTML:cleseed+"grille "+(qty+1)});header.appendChild(bloc1),header.appendChild(bloc2),header.appendChild(bloc3),ceinture.appendChild(header),cleseed=document.getElementById("ceintprintToCorrige").checked?"Clé : "+MM.seed+" / ":"",corrige.appendChild(utils.create("div",{innerHTML:(document.getElementById("ceinttitle").value||"Ceinture")+"<br>"+cleseed+"grille : "+(qty+1),className:"border-black"}));let colsid=0,stylecols=Array(nbcols).fill("auto").join(" "),stylerows=Array(nbrows).fill("auto").join(" ");const divColonnes=utils.create("div",{className:"ceinture-content grid",style:"grid-template-columns:"+stylecols+";grid-template-rows:"+(stylerows+1)});let divColsCorrige=utils.create("div",{className:"ceinture-corrige grid",style:"grid-template-columns:"+stylecols+";grid-template-rows:"+stylerows}),divCorr={},cols={},nbq=0;for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];for(let j=0;j<activity.questions.length;j++){if(nbq%nbrows==0){colsid++,cols[colsid]=[],divCorr[colsid]=[];let titre=document.getElementById("ceinttitlecol"+colsid).value;""!==titre&&cols[colsid].push(utils.create("div",{innerHTML:titre,className:"ceinture-titre-colonne border-black"}))}nbq++;let ligne=utils.create("div",{className:"grid border-black col"+colsid,style:"grid-column:"+colsid}),ligneCorr=utils.create("div",{className:"grid border-black"});if("latex"===activity.type||""===activity.type||void 0===activity.type){let divq=utils.create("div",{className:"question"+colsid+" quest"}),span=utils.create("span",{className:"math",innerHTML:activity.shortQuestions[j]||activity.questions[j]});divq.appendChild(span),ligne.appendChild(divq)}else ligne.appendChild(utils.create("div",{innerHTML:activity.shortQuestions[j]||activity.questions[j],className:"question"+colsid+" quest"}));let value=activity.values[j];Array.isArray(value)&&(value=value[0]);let spanc=utils.create("span",{className:"math",innerHTML:value});ligneCorr.appendChild(spanc),divCorr[colsid].push(ligneCorr);let divans=utils.create("div",{className:"bg-grey ans answer"+colsid,style:"height:20pt;"});if(ligne.appendChild(divans),cols[colsid].push(ligne),nbq%nbrows==0&&nbrows>0){let pied=document.getElementById("ceintpiedcol").value;""!==pied&&cols[colsid].push(utils.create("div",{innerHTML:pied,className:"ceinture-pied-colonne border-black"}))}}}for(let i=0;i<cols[1].length;i++)for(let j=1;j<=nbcols;j++)divColonnes.appendChild(cols[j][i]);ceinture.appendChild(divColonnes),this.content.appendChild(ceinture);for(let i=0;i<divCorr[1].length;i++)for(let j=1;j<=nbcols;j++)divColsCorrige.appendChild(divCorr[j][i]);corrige.appendChild(divColsCorrige),"fin"===posCorrection?correction.appendChild(corrige):this.content.appendChild(corrige)}"fin"===posCorrection&&this.content.appendChild(correction)}createFlashCards(){MM.memory={};let script=this.create("script",{text:'\n        function changeheight(nb){\n            let elts = document.querySelectorAll(".card");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.height = nb+"mm";\n            }\n        }\n        '});this.docsheet.head.appendChild(script);let aleaCode=this.create("div",{className:"floatright",innerHTML:"Clé : "+MM.seed});this.content.appendChild(aleaCode);let input='<input class="noprint fright" value="55" title="Taille cartes" type="number" size="3" min="30" max="180" oninput="changeheight(this.value)">';this.content.innerHTML+=input;let sheetTitle=document.getElementById("FCtitle").value||"Cartes Flash",header=this.create("header",{innerHTML:sheetTitle});this.content.appendChild(header);let sectionCartes=this.create("section",{className:"flash-section grid g2"});for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];for(let j=0;j<activity.questions.length;j++){let artQuestion=this.create("article",{className:"flash-question card"}),divq=this.create("div"),artCorrection=this.create("article",{className:"flash-reponse card"}),divr=this.create("div");if("latex"===activity.type||""===activity.type||void 0===activity.type){let span=this.create("span",{className:"math",innerHTML:activity.questions[j]}),spanCorrection=this.create("span",{className:"math",innerHTML:activity.answers[j]});divq.appendChild(span),divr.appendChild(spanCorrection)}else divq.innerHTML=activity.questions[j],divr.innerHTML=activity.answers[j];artQuestion.appendChild(divq),artCorrection.appendChild(divr),sectionCartes.appendChild(artQuestion),void 0!==activity.figures[j]&&(0===i&&0===j&&(MM.memory.dest=this.wsheet),MM.memory["f"+i+"-"+j]=new Figure(utils.clone(activity.figures[j]),"f"+i+"-"+j,divq)),sectionCartes.appendChild(artCorrection)}}this.content.appendChild(sectionCartes),utils.isEmpty(MM.memory)||setTimeout((function(){for(const k in MM.memory)"dest"!==k&&MM.memory[k].display(MM.memory.dest)}),300)}createWhoGots(){MM.memory={};let script=this.create("script",{text:'\n        function changeheight(nb){\n            let elts = document.querySelectorAll(".whogot-carte");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.height = nb+"mm";\n            }\n        }\n        function changewidth(nb){\n            let elts = document.querySelectorAll(".whogot-carte");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.width = nb+"mm";\n            }\n        }\n        '}),WGquestion=document.getElementById("WGquestion").value?document.getElementById("WGquestion").value:"Qui a ?",WGaffirmation=document.getElementById("WGaffirmation").value?document.getElementById("WGaffirmation").value:"J'ai ...";this.docsheet.head.appendChild(script);let aleaCode=this.create("div",{className:"floatright",innerHTML:"Clé : "+MM.seed});this.content.appendChild(aleaCode);let input='<input class="noprint fright" value="55" title="Hauteur cartes" type="number" size="3" min="30" max="180" oninput="changeheight(this.value)">\n        <input class="noprint fright" value="55" title="Largeur cartes" type="number" size="3" min="30" max="180" oninput="changewidth(this.value)">';this.content.innerHTML+=input;let sheetTitle=document.getElementById("FCtitle").value||"J'ai / Qui a ?",header=this.create("header",{innerHTML:sheetTitle});this.content.appendChild(header);let sectionCartes=this.create("section",{className:"whogot-section"}),nbOfCards=0;for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];for(let j=0;j<activity.questions.length;j++){nbOfCards++;let carte=this.create("article",{className:"whogot-carte",id:"carte"+nbOfCards}),artQuestion=this.create("article",{className:"whogot-question",innerHTML:"<h3>"+WGquestion+"</h3>"}),divq=this.create("div");if("latex"===activity.type||""===activity.type||void 0===activity.type){let span=this.create("span",{className:"math",innerHTML:activity.questions[j]});divq.appendChild(span)}else divq.innerHTML=activity.questions[j];artQuestion.appendChild(divq),carte.appendChild(artQuestion),void 0!==activity.figures[j]&&(void 0===MM.memory.dest&&(MM.memory.dest=this.wsheet),MM.memory["f"+nbOfCards]=new Figure(utils.clone(activity.figures[j]),"f"+nbOfCards,divq)),sectionCartes.appendChild(carte)}}this.content.appendChild(sectionCartes);let numAnswer=1;for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];for(let j=0;j<activity.questions.length;j++){numAnswer++;let carte=this.docsheet.getElementById("carte"+(numAnswer>nbOfCards?1:numAnswer)),artCorrection=this.create("article",{className:"whogot-reponse",innerHTML:"<h3>"+WGaffirmation+"</h3"}),divr=this.create("div"),answer=activity.values[j];if(_.isArray(answer)&&(answer=answer[0]),"latex"===activity.type||""===activity.type||void 0===activity.type){let spanCorrection=this.create("span",{className:"math",innerHTML:answer});divr.appendChild(spanCorrection)}else divr.innerHTML="<span class='math'>"+answer+"</span>";artCorrection.appendChild(divr);let hr=this.create("hr");carte.prepend(hr),carte.prepend(artCorrection)}}utils.isEmpty(MM.memory)||setTimeout((function(){for(const k in MM.memory)"dest"!==k&&MM.memory[k].display(MM.memory.dest)}),300)}createDominos(){MM.memory={};let script=this.create("script",{text:'\n        function changeheight(nb){\n            let elts = document.querySelectorAll(".dominos-carte");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.height = nb+"mm";\n            }\n        }\n        function changewidth(nb){\n            let elts = document.querySelectorAll(".dominos-carte");\n            for(let i=0;i<elts.length;i++){\n                elts[i].style.width = nb+"mm";\n            }\n        }\n        '});this.docsheet.head.appendChild(script);let aleaCode=this.create("div",{className:"floatright",innerHTML:"Clé : "+MM.seed});this.content.appendChild(aleaCode);let input='<div class="noprint fright">Largeur : \n        <input value="60" title="Largeur domino" type="number" size="3" min="60" max="180" oninput="changewidth(this.value)">\n        Hauteur :\n        <input value="25" title="Hauteur domino" type="number" size="3" min="25" max="180" oninput="changeheight(this.value)">\n        </div>';this.content.innerHTML+=input;let sheetTitle="<h1>Dominos</h1>",header=this.create("header",{innerHTML:sheetTitle});this.content.appendChild(header);let sectionCartes=this.create("section",{className:"dominos-section"}),nbOfCards=0;for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];for(let j=0;j<activity.questions.length;j++){nbOfCards++;let carte=this.create("article",{className:"dominos-carte",id:"domino"+nbOfCards}),hr=this.create("div",{className:"barrev",innerHTML:"&nbsp;"});carte.appendChild(hr);let artQuestion=this.create("article",{className:"dominos-question"}),divq=this.create("div");if("latex"===activity.type||""===activity.type||void 0===activity.type){let span=this.create("span",{className:"math",innerHTML:activity.questions[j]});divq.appendChild(span)}else divq.innerHTML=activity.questions[j];artQuestion.appendChild(divq),carte.appendChild(artQuestion),void 0!==activity.figures[j]&&(void 0===MM.memory.dest&&(MM.memory.dest=this.wsheet),MM.memory["f"+nbOfCards]=new Figure(utils.clone(activity.figures[j]),"f"+nbOfCards,divq)),sectionCartes.appendChild(carte)}}this.content.appendChild(sectionCartes);let numAnswer=1;for(let i=0;i<this.activities.length;i++){const activity=this.activities[i];for(let j=0;j<activity.questions.length;j++){numAnswer++;let carte=this.docsheet.getElementById("domino"+(numAnswer>nbOfCards?1:numAnswer)),artCorrection=this.create("article",{className:"dominos-reponse"}),divr=this.create("div"),answer=activity.values[j];if(_.isArray(answer)&&(answer=answer[0]),"latex"===activity.type||""===activity.type||void 0===activity.type){let spanCorrection=this.create("span",{className:"math",innerHTML:answer});divr.appendChild(spanCorrection)}else divr.innerHTML="<span class='math'>"+answer+"</span>";artCorrection.appendChild(divr),carte.prepend(artCorrection)}}utils.isEmpty(MM.memory)||setTimeout((function(){for(const k in MM.memory)"dest"!==k&&MM.memory[k].display(MM.memory.dest)}),300)}}