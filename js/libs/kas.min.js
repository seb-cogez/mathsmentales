/*! KAS | https://github.com/Khan/KAS */
var _,KAS={};"object"==typeof module&&module.exports?(_=require("underscore"),module.exports=KAS):(_=window._,window.KAS=KAS),function(KAS){var parser=function(){var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,17],$V2=[1,13],$V3=[1,14],$V4=[1,15],$V5=[1,32],$V6=[1,22],$V7=[1,23],$V8=[1,24],$V9=[1,25],$Va=[1,26],$Vb=[1,33],$Vc=[1,27],$Vd=[1,28],$Ve=[1,29],$Vf=[1,30],$Vg=[1,20],$Vh=[1,36],$Vi=[1,37],$Vj=[5,6,8,10,33,35,41,43,45],$Vk=[1,39],$Vl=[1,40],$Vm=[5,6,8,10,12,14,16,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],$Vn=[10,16,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],$Vo=[5,6,8,10,12,14,16,18,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],parser={trace:function trace(){},yy:{},symbols_:{error:2,equation:3,expression:4,SIGN:5,EOF:6,additive:7,"+":8,multiplicative:9,"-":10,triglog:11,"*":12,negative:13,"/":14,trig:15,TRIG:16,trigfunc:17,"^":18,TRIGINV:19,logbase:20,ln:21,log:22,_:23,subscriptable:24,power:25,primitive:26,variable:27,VAR:28,CONST:29,INT:30,FLOAT:31,"{":32,"}":33,"(":34,")":35,function:36,FUNC:37,invocation:38,sqrt:39,"[":40,"]":41,abs:42,"|":43,"LEFT|":44,"RIGHT|":45,FRAC:46,$accept:0,$end:1},terminals_:{2:"error",5:"SIGN",6:"EOF",8:"+",10:"-",12:"*",14:"/",16:"TRIG",18:"^",19:"TRIGINV",21:"ln",22:"log",23:"_",28:"VAR",29:"CONST",30:"INT",31:"FLOAT",32:"{",33:"}",34:"(",35:")",37:"FUNC",39:"sqrt",40:"[",41:"]",42:"abs",43:"|",44:"LEFT|",45:"RIGHT|",46:"FRAC"},productions_:[0,[3,4],[3,2],[3,1],[4,1],[7,3],[7,3],[7,1],[9,2],[9,3],[9,3],[9,1],[13,2],[13,1],[15,1],[17,1],[17,3],[17,1],[20,1],[20,1],[20,3],[11,2],[11,2],[11,1],[25,3],[25,1],[27,1],[24,3],[24,1],[24,1],[24,1],[24,1],[24,3],[24,3],[36,1],[38,4],[38,4],[38,7],[38,4],[38,3],[38,3],[38,4],[26,1],[26,1],[26,7]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return new yy.Eq($$[$0-3],$$[$0-2],$$[$0-1]);case 2:return $$[$0-1];case 3:return new yy.Add([]);case 4:case 7:case 11:case 13:case 15:case 20:case 23:case 25:case 42:case 43:this.$=$$[$0];break;case 5:this.$=yy.Add.createOrAppend($$[$0-2],$$[$0]);break;case 6:this.$=yy.Add.createOrAppend($$[$0-2],yy.Mul.handleNegative($$[$0],"subtract"));break;case 8:this.$=yy.Mul.fold(yy.Mul.createOrAppend($$[$0-1],$$[$0]));break;case 9:this.$=yy.Mul.fold(yy.Mul.createOrAppend($$[$0-2],$$[$0]));break;case 10:this.$=yy.Mul.fold(yy.Mul.handleDivide($$[$0-2],$$[$0]));break;case 12:this.$=yy.Mul.handleNegative($$[$0]);break;case 14:case 17:this.$=[yytext];break;case 16:this.$=$$[$0-2].concat($$[$0]);break;case 18:this.$=yy.Log.natural();break;case 19:this.$=yy.Log.common();break;case 21:this.$=yy.Trig.create($$[$0-1],$$[$0]);break;case 22:this.$=yy.Log.create($$[$0-1],$$[$0]);break;case 24:this.$=new yy.Pow($$[$0-2],$$[$0]);break;case 26:case 34:this.$=yytext;break;case 27:this.$=new yy.Var($$[$0-2],$$[$0]);break;case 28:this.$=new yy.Var($$[$0]);break;case 29:this.$=new yy.Const(yytext.toLowerCase());break;case 30:this.$=yy.Int.create(Number(yytext));break;case 31:this.$=yy.Float.create(Number(yytext));break;case 32:this.$=$$[$0-1].completeParse();break;case 33:this.$=$$[$0-1].completeParse().addHint("parens");break;case 35:case 36:this.$=yy.Pow.sqrt($$[$0-1]);break;case 37:this.$=new yy.Pow.nthroot($$[$0-1],$$[$0-4]);break;case 38:case 39:case 40:this.$=new yy.Abs($$[$0-1]);break;case 41:this.$=new yy.Func($$[$0-3],$$[$0-1]);break;case 44:this.$=yy.Mul.handleDivide($$[$0-4],$$[$0-1])}},table:[{3:1,4:2,6:[1,3],7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[3]},{5:[1,34],6:[1,35]},{1:[2,3]},o([5,6],[2,4],{8:$Vh,10:$Vi}),o($Vj,[2,7],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,11]),{10:$V0,11:8,13:41,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,13]),{10:$V0,11:8,13:42,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:43,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,23]),o($Vn,[2,15],{18:[1,44]}),o($Vn,[2,17]),o($Vn,[2,18]),o($Vn,[2,19],{23:[1,45]}),o($Vm,[2,25],{18:[1,46]}),o([10,16,18,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],[2,14]),o($Vo,[2,42]),o($Vo,[2,43]),{32:[1,47]},o($Vo,[2,28],{23:[1,48]}),o($Vo,[2,29]),o($Vo,[2,30]),o($Vo,[2,31]),{7:49,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:50,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{32:[1,52],34:[1,51],40:[1,53]},{34:[1,54]},{7:55,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:56,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{34:[1,57]},o([5,6,8,10,12,14,16,18,19,21,22,23,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],[2,26]),{34:[2,34]},{4:58,7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[2,2]},{9:59,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{9:60,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,8]),{10:$V0,11:8,13:61,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:62,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,12]),o($Vm,[2,21]),o($Vm,[2,22]),{10:$V0,11:8,13:63,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:64,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{10:$V0,11:8,13:65,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:66,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:67,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{8:$Vh,10:$Vi,33:[1,68]},{8:$Vh,10:$Vi,35:[1,69]},{7:70,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:71,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:72,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:73,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,43:[1,74]},{8:$Vh,10:$Vi,45:[1,75]},{7:76,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{6:[1,77]},o($Vj,[2,5],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vj,[2,6],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,9]),o($Vm,[2,10]),o($Vn,[2,16]),o($Vn,[2,20]),o($Vm,[2,24]),{8:$Vh,10:$Vi,33:[1,78]},o($Vo,[2,27]),o($Vo,[2,32]),o($Vo,[2,33]),{8:$Vh,10:$Vi,35:[1,79]},{8:$Vh,10:$Vi,33:[1,80]},{8:$Vh,10:$Vi,41:[1,81]},{8:$Vh,10:$Vi,35:[1,82]},o($Vo,[2,39]),o($Vo,[2,40]),{8:$Vh,10:$Vi,35:[1,83]},{1:[2,1]},{32:[1,84]},o($Vo,[2,35]),o($Vo,[2,36]),{32:[1,85]},o($Vo,[2,38]),o($Vo,[2,41]),{7:86,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:87,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,33:[1,88]},{8:$Vh,10:$Vi,33:[1,89]},o($Vo,[2,44]),o($Vo,[2,37])],defaultActions:{3:[2,3],33:[2,34],35:[2,2],77:[2,1]},parseError:function parseError(str,hash){if(!hash.recoverable)throw new Error(str);this.trace(str)},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1,args=lstack.slice.call(arguments,1),lexer=Object.create(this.lexer),sharedState={yy:{}};for(var k in this.yy)Object.prototype.hasOwnProperty.call(this.yy,k)&&(sharedState.yy[k]=this.yy[k]);lexer.setInput(input,sharedState.yy),sharedState.yy.lexer=lexer,sharedState.yy.parser=this,void 0===lexer.yylloc&&(lexer.yylloc={});var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;function popStack(n){stack.length=stack.length-2*n,vstack.length=vstack.length-n,lstack.length=lstack.length-n}function lex(){var token;return"number"!=typeof(token=lexer.lex()||EOF)&&(token=self.symbols_[token]||token),token}"function"==typeof sharedState.yy.parseError?this.parseError=sharedState.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;;){if(state=stack[stack.length-1],this.defaultActions[state]?action=this.defaultActions[state]:(null==symbol&&(symbol=lex()),action=table[state]&&table[state][symbol]),void 0===action||!action.length||!action[0]){var errStr="";for(p in expected=[],table[state])this.terminals_[p]&&p>TERROR&&expected.push("'"+this.terminals_[p]+"'");errStr=lexer.showPosition?"Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'":"Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'"),this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol),vstack.push(lexer.yytext),lstack.push(lexer.yylloc),stack.push(action[1]),symbol=null,preErrorSymbol?(symbol=preErrorSymbol,preErrorSymbol=null):(yyleng=lexer.yyleng,yytext=lexer.yytext,yylineno=lexer.yylineno,yyloc=lexer.yylloc,recovering>0&&recovering--);break;case 2:if(len=this.productions_[action[1]][1],yyval.$=vstack[vstack.length-len],yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column},ranges&&(yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]),void 0!==(r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args))))return r;len&&(stack=stack.slice(0,-1*len*2),vstack=vstack.slice(0,-1*len),lstack=lstack.slice(0,-1*len)),stack.push(this.productions_[action[1]][0]),vstack.push(yyval.$),lstack.push(yyval._$),newState=table[stack[stack.length-2]][stack[stack.length-1]],stack.push(newState);break;case 3:return!0}}return!0}},lexer=function(){var lexer;return{EOF:1,parseError:function parseError(str,hash){if(!this.yy.parser)throw new Error(str);this.yy.parser.parseError(str,hash)},setInput:function(input,yy){return this.yy=yy||this.yy||{},this._input=input,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var ch=this._input[0],lines;return this.yytext+=ch,this.yyleng++,this.offset++,this.match+=ch,this.matched+=ch,ch.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),ch},unput:function(ch){var len=ch.length,lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-len),this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),lines.length-1&&(this.yylineno-=lines.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-len]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;return next.length<20&&(next+=this._input.substr(0,20-next.length)),(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput(),c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer&&(backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(backup.yylloc.range=this.yylloc.range.slice(0))),(lines=match[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=lines.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length},this.yytext+=match[0],this.match+=match[0],this.matches=match,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(match[0].length),this.matched+=match[0],token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),token)return token;if(this._backtrack){for(var k in backup)this[k]=backup[k];return!1}return!1},next:function(){if(this.done)return this.EOF;var token,match,tempMatch,index;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var rules=this._currentRules(),i=0;i<rules.length;i++)if((tempMatch=this._input.match(this.rules[rules[i]]))&&(!match||tempMatch[0].length>match[0].length)){if(match=tempMatch,index=i,this.options.backtrack_lexer){if(!1!==(token=this.test_match(tempMatch,rules[i])))return token;if(this._backtrack){match=!1;continue}return!1}if(!this.options.flex)break}return match?!1!==(token=this.test_match(match,rules[index]))&&token:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function lex(){var r=this.next();return r||this.lex()},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n;return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function _currentRules(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function topState(n){return(n=this.conditionStack.length-1-Math.abs(n||0))>=0?this.conditionStack[n]:"INITIAL"},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{flex:!0},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:case 1:case 2:break;case 3:return"INT";case 4:return"FLOAT";case 5:return"^";case 6:case 7:case 8:case 9:return"*";case 10:case 11:return"/";case 12:case 13:return"-";case 14:return"+";case 15:return"^";case 16:return"(";case 17:return")";case 18:return"(";case 19:return")";case 20:return"[";case 21:return"]";case 22:return"{";case 23:return"}";case 24:return"{";case 25:return"}";case 26:return"_";case 27:return"|";case 28:return"LEFT|";case 29:return"RIGHT|";case 30:return"!";case 31:return"SIGN";case 32:return yy_.yytext="<=","SIGN";case 33:return yy_.yytext=">=","SIGN";case 34:return yy_.yytext="<=","SIGN";case 35:return yy_.yytext=">=","SIGN";case 36:case 37:case 38:case 39:return yy_.yytext="<>","SIGN";case 40:return yy_.yytext="<=","SIGN";case 41:return yy_.yytext=">=","SIGN";case 42:case 43:return"FRAC";case 44:return"sqrt";case 45:return"abs";case 46:return"ln";case 47:return"log";case 48:case 49:case 50:case 51:return"TRIG";case 52:return yy_.yytext="sin","TRIG";case 53:return yy_.yytext="cos","TRIG";case 54:return yy_.yytext="tan","TRIG";case 55:return yy_.yytext="csc","TRIG";case 56:return yy_.yytext="sec","TRIG";case 57:return yy_.yytext="cot","TRIG";case 58:return yy_.yytext="arcsin","TRIG";case 59:return yy_.yytext="arccos","TRIG";case 60:return yy_.yytext="arctan","TRIG";case 61:return yy_.yytext="arccsc","TRIG";case 62:return yy_.yytext="arcsec","TRIG";case 63:return yy_.yytext="arccot","TRIG";case 64:case 65:return"TRIGINV";case 66:return yy_.yytext="sinh","TRIG";case 67:return yy_.yytext="cosh","TRIG";case 68:return yy_.yytext="tanh","TRIG";case 69:return yy_.yytext="csch","TRIG";case 70:return yy_.yytext="sech","TRIG";case 71:return yy_.yytext="tanh","TRIG";case 72:return"CONST";case 73:case 74:return yy_.yytext="pi","CONST";case 75:return"VAR";case 76:case 77:return yy_.yytext="theta","VAR";case 78:return"VAR";case 79:case 80:return yy_.yytext="phi","VAR";case 81:return yy.symbolLexer(yy_.yytext);case 82:return"EOF";case 83:return"INVALID";case 84:console.log(yy_.yytext)}},rules:[/^(?:\s+)/,/^(?:\\space)/,/^(?:\\ )/,/^(?:[0-9]+\.?)/,/^(?:([0-9]+)?\.[0-9]+)/,/^(?:\*\*)/,/^(?:\*)/,/^(?:\\cdot|·)/,/^(?:\\times|×)/,/^(?:\\ast)/,/^(?:\/)/,/^(?:\\div|÷)/,/^(?:-)/,/^(?:−)/,/^(?:\+)/,/^(?:\^)/,/^(?:\()/,/^(?:\))/,/^(?:\\left\()/,/^(?:\\right\))/,/^(?:\[)/,/^(?:\])/,/^(?:\{)/,/^(?:\})/,/^(?:\\left\{)/,/^(?:\\right\})/,/^(?:_)/,/^(?:\|)/,/^(?:\\left\|)/,/^(?:\\right\|)/,/^(?:\!)/,/^(?:<=|>=|<>|<|>|=)/,/^(?:\\le)/,/^(?:\\ge)/,/^(?:\\leq)/,/^(?:\\geq)/,/^(?:=\/=)/,/^(?:\\ne)/,/^(?:\\neq)/,/^(?:≠)/,/^(?:≤)/,/^(?:≥)/,/^(?:\\frac)/,/^(?:\\dfrac)/,/^(?:sqrt|\\sqrt)/,/^(?:abs|\\abs)/,/^(?:ln|\\ln)/,/^(?:log|\\log)/,/^(?:sin|cos|tan)/,/^(?:csc|sec|cot)/,/^(?:sinh|cosh|tanh)/,/^(?:csch|sech|coth)/,/^(?:\\sin)/,/^(?:\\cos)/,/^(?:\\tan)/,/^(?:\\csc)/,/^(?:\\sec)/,/^(?:\\cot)/,/^(?:\\arcsin)/,/^(?:\\arccos)/,/^(?:\\arctan)/,/^(?:\\arccsc)/,/^(?:\\arcsec)/,/^(?:\\arccot)/,/^(?:arcsin|arccos|arctan)/,/^(?:arccsc|arcsec|arccot)/,/^(?:\\sinh)/,/^(?:\\cosh)/,/^(?:\\tanh)/,/^(?:\\csch)/,/^(?:\\sech)/,/^(?:\\coth)/,/^(?:pi)/,/^(?:π)/,/^(?:\\pi)/,/^(?:theta)/,/^(?:θ)/,/^(?:\\theta)/,/^(?:phi)/,/^(?:φ)/,/^(?:\\phi)/,/^(?:[a-zA-Z])/,/^(?:$)/,/^(?:.)/,/^(?:.)/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],inclusive:!0}}}}();function Parser(){this.yy={}}return parser.lexer=lexer,Parser.prototype=parser,parser.Parser=Parser,new Parser}();KAS.parser=parser}(KAS),function(KAS){var parser=function(){var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,11],$V1=[1,9],$V2=[8,17],$V3=[6,11],$V4=[6,11,13,17],parser={trace:function trace(){},yy:{},symbols_:{error:2,unitvalue:3,magnitude:4,unit:5,EOF:6,float:7,POW:8,int:9,multatoms:10,DIV:11,expatom:12,MUL:13,atom:14,"^":15,nat:16,ATOM:17,FLOAT:18,NAT:19,NEG:20,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",8:"POW",11:"DIV",13:"MUL",15:"^",17:"ATOM",18:"FLOAT",19:"NAT",20:"NEG"},productions_:[0,[3,3],[3,2],[4,3],[4,1],[5,3],[5,1],[10,3],[10,2],[10,1],[12,3],[12,1],[14,1],[7,1],[7,1],[16,1],[9,2],[9,1]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return{type:"unitMagnitude",magnitude:$$[$0-2],unit:$$[$0-1]};case 2:return{type:"unitStandalone",unit:$$[$0-1]};case 3:this.$=$$[$0-2]+"e"+$$[$0];break;case 4:case 13:case 14:case 15:case 17:this.$=$$[$0];break;case 5:this.$={num:$$[$0-2],denom:$$[$0]};break;case 6:this.$={num:$$[$0],denom:null};break;case 7:this.$=[$$[$0-2]].concat($$[$0]);break;case 8:this.$=[$$[$0-1]].concat($$[$0]);break;case 9:this.$=[$$[$0]];break;case 10:this.$={name:$$[$0-2],pow:$$[$0]};break;case 11:this.$={name:$$[$0],pow:1};break;case 12:this.$=yytext;break;case 16:this.$="-"+$$[$0]}},table:[{3:1,4:2,5:3,7:4,10:5,12:8,14:10,16:7,17:$V0,18:[1,6],19:$V1},{1:[3]},{5:12,10:5,12:8,14:10,17:$V0},{6:[1,13]},{8:[1,14],17:[2,4]},{6:[2,6],11:[1,15]},o($V2,[2,13]),o($V2,[2,14]),o($V3,[2,9],{12:8,14:10,10:17,13:[1,16],17:$V0}),o([6,8,11,13,17],[2,15]),o($V4,[2,11],{15:[1,18]}),o([6,11,13,15,17],[2,12]),{6:[1,19]},{1:[2,2]},{9:20,19:[1,22],20:[1,21]},{10:23,12:8,14:10,17:$V0},{10:24,12:8,14:10,17:$V0},o($V3,[2,8]),{16:25,19:$V1},{1:[2,1]},{17:[2,3]},{19:[1,26]},{17:[2,17]},{6:[2,5]},o($V3,[2,7]),o($V4,[2,10]),{17:[2,16]}],defaultActions:{13:[2,2],19:[2,1],20:[2,3],22:[2,17],23:[2,5],26:[2,16]},parseError:function parseError(str,hash){if(!hash.recoverable)throw new Error(str);this.trace(str)},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1,args=lstack.slice.call(arguments,1),lexer=Object.create(this.lexer),sharedState={yy:{}};for(var k in this.yy)Object.prototype.hasOwnProperty.call(this.yy,k)&&(sharedState.yy[k]=this.yy[k]);lexer.setInput(input,sharedState.yy),sharedState.yy.lexer=lexer,sharedState.yy.parser=this,void 0===lexer.yylloc&&(lexer.yylloc={});var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;function popStack(n){stack.length=stack.length-2*n,vstack.length=vstack.length-n,lstack.length=lstack.length-n}function lex(){var token;return"number"!=typeof(token=lexer.lex()||EOF)&&(token=self.symbols_[token]||token),token}"function"==typeof sharedState.yy.parseError?this.parseError=sharedState.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;;){if(state=stack[stack.length-1],this.defaultActions[state]?action=this.defaultActions[state]:(null==symbol&&(symbol=lex()),action=table[state]&&table[state][symbol]),void 0===action||!action.length||!action[0]){var errStr="";for(p in expected=[],table[state])this.terminals_[p]&&p>TERROR&&expected.push("'"+this.terminals_[p]+"'");errStr=lexer.showPosition?"Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'":"Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'"),this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol),vstack.push(lexer.yytext),lstack.push(lexer.yylloc),stack.push(action[1]),symbol=null,preErrorSymbol?(symbol=preErrorSymbol,preErrorSymbol=null):(yyleng=lexer.yyleng,yytext=lexer.yytext,yylineno=lexer.yylineno,yyloc=lexer.yylloc,recovering>0&&recovering--);break;case 2:if(len=this.productions_[action[1]][1],yyval.$=vstack[vstack.length-len],yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column},ranges&&(yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]),void 0!==(r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args))))return r;len&&(stack=stack.slice(0,-1*len*2),vstack=vstack.slice(0,-1*len),lstack=lstack.slice(0,-1*len)),stack.push(this.productions_[action[1]][0]),vstack.push(yyval.$),lstack.push(yyval._$),newState=table[stack[stack.length-2]][stack[stack.length-1]],stack.push(newState);break;case 3:return!0}}return!0}},lexer=function(){var lexer;return{EOF:1,parseError:function parseError(str,hash){if(!this.yy.parser)throw new Error(str);this.yy.parser.parseError(str,hash)},setInput:function(input,yy){return this.yy=yy||this.yy||{},this._input=input,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var ch=this._input[0],lines;return this.yytext+=ch,this.yyleng++,this.offset++,this.match+=ch,this.matched+=ch,ch.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),ch},unput:function(ch){var len=ch.length,lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-len),this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),lines.length-1&&(this.yylineno-=lines.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-len]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;return next.length<20&&(next+=this._input.substr(0,20-next.length)),(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput(),c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer&&(backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(backup.yylloc.range=this.yylloc.range.slice(0))),(lines=match[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=lines.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length},this.yytext+=match[0],this.match+=match[0],this.matches=match,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(match[0].length),this.matched+=match[0],token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),token)return token;if(this._backtrack){for(var k in backup)this[k]=backup[k];return!1}return!1},next:function(){if(this.done)return this.EOF;var token,match,tempMatch,index;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var rules=this._currentRules(),i=0;i<rules.length;i++)if((tempMatch=this._input.match(this.rules[rules[i]]))&&(!match||tempMatch[0].length>match[0].length)){if(match=tempMatch,index=i,this.options.backtrack_lexer){if(!1!==(token=this.test_match(tempMatch,rules[i])))return token;if(this._backtrack){match=!1;continue}return!1}if(!this.options.flex)break}return match?!1!==(token=this.test_match(match,rules[index]))&&token:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function lex(){var r=this.next();return r||this.lex()},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n;return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function _currentRules(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function topState(n){return(n=this.conditionStack.length-1-Math.abs(n||0))>=0?this.conditionStack[n]:"INITIAL"},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return 11;case 1:return"(";case 2:return")";case 3:return 8;case 4:return 15;case 5:return 13;case 6:return 18;case 7:return 19;case 8:return 20;case 9:case 10:case 11:return 17;case 12:break;case 13:return 6}},rules:[/^(?:\/)/,/^(?:\()/,/^(?:\))/,/^(?:(\*|x|\u00d7|\u2219|\u22c5|\u00b7)\s*10\s*\^)/,/^(?:\^)/,/^(?:\*)/,/^(?:[0-9]+\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:-)/,/^(?:\u00b0( ?)[cCfF])/,/^(?:fl\.? oz\.?)/,/^(?:[\u00b5]?([A-Za-z-]+|[\u2103\u2109\u212b]))/,/^(?:\s+)/,/^(?:$)/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13],inclusive:!0}}}}();function Parser(){this.yy={}}return parser.lexer=lexer,Parser.prototype=parser,parser.Parser=Parser,new Parser}();KAS.unitParser=parser}(KAS),function(KAS){var abstract=function(){throw new Error("Abstract method - must override for expr: "+this.print())},error=function(message){throw new Error(message)},isNaN=function(object){return object!=object},randomFloat=function(min,max){var extent=max-min;return Math.random()*extent+min},ITERATIONS=12,TOLERANCE=9;function Expr(){}function Seq(){}function Add(){1===arguments.length?this.terms=arguments[0]:this.terms=_.toArray(arguments)}function Mul(){1===arguments.length?this.terms=arguments[0]:this.terms=_.toArray(arguments)}function Pow(base,exp){this.base=base,this.exp=exp}function Log(base,power){this.base=base,this.power=power}function Trig(type,arg){this.type=type,this.arg=arg}function Abs(arg){this.arg=arg}function Eq(left,type,right){this.left=left,this.type=type,this.right=right}function Symbol(){}function Func(symbol,arg){this.symbol=symbol,this.arg=arg}function Var(symbol,subscript){this.symbol=symbol,this.subscript=subscript}function Const(symbol){this.symbol=symbol}function Num(){}function Rational(numerator,denominator){var n=numerator,d=denominator;d<0&&(n=-n,d=-d),this.n=n,this.d=d}function Int(number){this.n=number}function Float(number){this.n=number}_.extend(Expr.prototype,{func:abstract,args:abstract,construct:function(args){var instance=new this.func;return this.func.apply(instance,args),instance},recurse:function(method){var passed=Array.prototype.slice.call(arguments,1),args=_.map(this.args(),(function(arg){return _.isString(arg)?arg:arg[method].apply(arg,passed)}));return this.construct(args)},eval:abstract,codegen:abstract,compile:function(){var code=this.codegen();try{return new Function("vars","return "+code+";")}catch(e){throw new Error("Function did not compile: "+code)}},print:abstract,tex:abstract,asTex:function(options){options=options||{},_.defaults(options,{display:!0,dynamic:!0,times:!1});var tex=this.tex();return options.display&&(tex="\\displaystyle "+tex),options.dynamic&&(tex=(tex=tex.replace(/\(/g,"\\left(")).replace(/\)/g,"\\right)")),options.times&&(tex=tex.replace(/\\cdot/g,"\\times")),tex},name:function(){return this.func.name?this.func.name:this.func.toString().match(/^function\s*([^\s(]+)/)[1]},repr:function(){return this.name()+"("+_.map(this.args(),(function(arg){return _.isString(arg)?arg:arg.repr()})).join(",")+")"},strip:function(){return this.recurse("strip")},normalize:function(){return this.recurse("normalize")},expand:function(){return this.recurse("expand")},factor:function(options){return this.recurse("factor",options)},collect:function(options){return this.recurse("collect",options)},equals:function(other){return this.normalize().print()===other.normalize().print()},simplify:function(options){options=_.extend({once:!1},options);var step1=this.factor(options),step2=step1.collect(options);step1.equals(step2)&&(step2=this.collect(options));var step3=step2.expand(options),step4=step3.collect(options);step3.equals(step4)&&(step4=step2.collect(options));var simplified=step4;return options.once||this.equals(simplified)?simplified:simplified.simplify(options)},isSimplified:function(){return this.equals(this.simplify())},exprArgs:function(){return _.filter(this.args(),(function(arg){return arg instanceof Expr}))},getVars:function(excludeFunc){return _.uniq(_.flatten(_.invoke(this.exprArgs(),"getVars",excludeFunc))).sort()},getConsts:function(){return _.uniq(_.flatten(_.invoke(this.exprArgs(),"getConsts"))).sort()},getUnits:function(){return _.flatten(_.invoke(this.exprArgs(),"getUnits"))},is:function(func){return this instanceof func},has:function(func){return this instanceof func||_.any(this.exprArgs(),(function(arg){return arg.has(func)}))},raiseToThe:function(exp){return new Pow(this,exp)},isSubtract:function(){return!1},isDivide:function(){return!1},isRoot:function(){return!1},needsExplicitMul:function(){return this.args()[0].needsExplicitMul()},sameVars:function(other){var vars1=this.getVars(),vars2=other.getVars(),same=function(array1,array2){return!_.difference(array1,array2).length},lower=function(array){return _.uniq(_.invoke(array,"toLowerCase")).sort()},equal,equalIgnoringCase;return{equal:same(vars1,vars2),equalIgnoringCase:same(lower(vars1),lower(vars2))}},compare:function(other){if(other instanceof Eq)return!1;var varList=_.union(this.getVars(!0),other.getVars(!0)),getDelta=function(num1,num2){return Math.abs(num1)<1||Math.abs(num2)<1?Math.abs(num1-num2):Math.abs(1-num1/num2)},equalNumbers=function(num1,num2){var delta=getDelta(num1,num2);return num1===num2||isNaN(num1)&&isNaN(num2)||delta<Math.pow(10,-9)};if(!varList.length&&!this.has(Unit)&&!other.has(Unit))return equalNumbers(this.eval(),other.eval());var expr1=this.collect(),expr2=other.collect(),unitList1=this.getUnits(),unitList2=other.getUnits();if(!_.isEqual(unitList1,unitList2))return!1;for(var i=0;i<12;i++){var vars={},range=Math.pow(10,1+Math.floor(3*i/12)),useFloats=i%2==0,equal;if(_.each(varList,(function(v){vars[v]=useFloats?randomFloat(-range,range):_.random(-range,range)})),expr1.has(Func)||expr2.has(Func)||expr1.has(Unit)||expr2.has(Unit)){var result1=expr1.partialEval(vars),result2=expr2.partialEval(vars);equal=result1.simplify().equals(result2.simplify())}else{var result1,result2;equal=equalNumbers(result1=expr1.eval(vars),result2=expr2.eval(vars))}if(!equal)return!1}return!0},partialEval:function(vars){return this instanceof Unit?this:this.has(Func)?this instanceof Func?new Func(this.symbol,this.arg.partialEval(vars)):this.recurse("partialEval",vars):new Float(this.eval(vars).toFixed(9)).collect()},sameForm:function(other){return this.strip().equals(other.strip())},findGCD:function(factor){return this.equals(factor)?factor:Num.One},getDenominator:function(){return Num.One},asMul:function(){return new Mul(Num.One,this)},isPositive:abstract,isNegative:function(){return!1},asPositiveFactor:function(){return this.isPositive()?this:Num.One},addHint:function(hint){if(!hint)return this;var expr=this.construct(this.args());return expr.hints=_.clone(this.hints),expr.hints[hint]=!0,expr},hints:{parens:!1},asExpr:function(){return this},completeParse:function(){return this.recurse("completeParse")},abs:abstract,negate:function(){return new Mul(Num.Neg,this)}}),Seq.prototype=new Expr,_.extend(Seq.prototype,{args:function(){return this.terms},normalize:function(){var terms=_.sortBy(_.invoke(this.terms,"normalize"),(function(term){return term.print()}));return new this.func(terms)},expand:function(){return this.recurse("expand").flatten()},partition:function(){var terms=_.groupBy(this.terms,(function(term){return term instanceof Num})),numbers=terms[!0]||[],others=terms[!1]||[];return[new this.func(numbers),new this.func(others)]},flatten:function(){var type=this,terms=_.reject(this.terms,(function(term){return term.equals(type.identity)}));if(0===terms.length)return type.identity;if(1===terms.length)return terms[0];var grouped=_.groupBy(terms,(function(term){return term instanceof type.func})),same=grouped[!0]||[],others,flattened=(grouped[!1]||[]).concat(_.flatten(_.pluck(same,"terms"),!0));return new type.func(flattened)},identity:void 0,reduce:abstract,isPositive:function(){var terms=_.invoke(this.terms,"collect");return _.all(_.invoke(terms,"isPositive"))},replace:function(oldTerm,newTerm){var index;index=oldTerm instanceof Expr?_.indexOf(this.terms,oldTerm):oldTerm;var newTerms=[];_.isArray(newTerm)?newTerms=newTerm:newTerm&&(newTerms=[newTerm]);var terms=this.terms.slice(0,index).concat(newTerms).concat(this.terms.slice(index+1));return new this.func(terms)},remove:function(term){return this.replace(term)},getDenominator:function(){return new Mul(_.invoke(this.terms,"getDenominator")).flatten()}}),Add.prototype=new Seq,_.extend(Add.prototype,{func:Add,eval:function(vars,options){return _.reduce(this.terms,(function(memo,term){return memo+term.eval(vars,options)}),0)},codegen:function(){return _.map(this.terms,(function(term){return"("+term.codegen()+")"})).join(" + ")||"0"},print:function(){return _.invoke(this.terms,"print").join("+")},tex:function(){var tex="";return _.each(this.terms,(function(term){!tex||term.isSubtract()?tex+=term.tex():tex+="+"+term.tex()})),tex},collect:function(options){var terms=_.invoke(this.terms,"collect",options),pairs=[];_.each(terms,(function(term){if(term instanceof Mul){var muls=term.partition();pairs.push([muls[1].flatten(),muls[0].reduce(options)])}else term instanceof Num?pairs.push([Num.One,term]):pairs.push([term,Num.One])}));var grouped=_.groupBy(pairs,(function(pair){return pair[0].normalize().print()})),collected=_.compact(_.map(grouped,(function(pairs){var expr=pairs[0][0],sum,coefficient;return new Mul(new Add(_.zip.apply(_,pairs)[1]).reduce(options),expr).collect(options)})));return new Add(collected).flatten()},factor:function(options){options=_.extend({keepNegative:!1},options);var terms=_.invoke(this.terms,"collect"),factors;factors=terms[0]instanceof Mul?terms[0].terms:[terms[0]],_.each(_.rest(this.terms),(function(term){factors=_.map(factors,(function(factor){return term.findGCD(factor)}))})),!options.keepNegative&&this.isNegative()&&factors.push(Num.Neg),factors=new Mul(factors).flatten().collect();var remainder=_.map(terms,(function(term){return Mul.handleDivide(term,factors).simplify()}));return remainder=new Add(remainder).flatten(),Mul.createOrAppend(factors,remainder).flatten()},reduce:function(options){return _.reduce(this.terms,(function(memo,term){return memo.add(term,options)}),this.identity)},needsExplicitMul:function(){return!1},isNegative:function(){var terms=_.invoke(this.terms,"collect");return _.all(_.invoke(terms,"isNegative"))},negate:function(){return new Add(_.invoke(this.terms,"negate"))}}),Mul.prototype=new Seq,_.extend(Mul.prototype,{func:Mul,eval:function(vars,options){return _.reduce(this.terms,(function(memo,term){return memo*term.eval(vars,options)}),1)},codegen:function(){return _.map(this.terms,(function(term){return"("+term.codegen()+")"})).join(" * ")||"0"},print:function(){return _.map(this.terms,(function(term){return term instanceof Add?"("+term.print()+")":term.print()})).join("*")},getUnits:function(){var tmUnits=_(this.terms).chain().map((function(term){return term.getUnits()})).flatten().value();return tmUnits.sort((function(a,b){return a.unit<b.unit})),tmUnits},tex:function(){for(var cdot=" \\cdot ",terms=_.groupBy(this.terms,(function(term){return term.isDivide()?"inverse":term instanceof Num?"number":"other"})),inverses=terms.inverse||[],numbers=terms.number||[],others=terms.other||[],negatives="",numerator,i=0;i<numbers.length;i++){var isRational;if(numbers[i]instanceof Rational&&!(numbers[i]instanceof Int)&&others.length>0&&inverses.length>0){var withThisRemoved=numbers.slice();withThisRemoved.splice(i,1);var newTerms=withThisRemoved.concat(inverses).concat(others);return numbers[i].tex()+new Mul(newTerms).tex()}}if(0===(numbers=_.compact(_.map(numbers,(function(term){var hasDenom=term instanceof Rational&&!(term instanceof Int),shouldPushDown=!term.hints.fraction||inverses.length>0;if(hasDenom&&shouldPushDown){inverses.push(new Pow(new Int(term.d),Num.Div));var number=new Int(term.n);return number.hints=term.hints,_.any(term.hints)?number:null}return term})))).length&&1===others.length)numerator=others[0].tex();else{var tex="";_.each(numbers,(function(term){term.hints.subtract&&term.hints.entered?(negatives+="-",tex+=(tex?cdot:"")+term.abs().tex()):term instanceof Int&&-1===term.n&&(term.hints.negate||term.hints.subtract)?negatives+="-":tex+=(tex?cdot:"")+term.tex()})),_.each(others,(function(term){term.needsExplicitMul()?tex+=(tex?cdot:"")+term.tex():tex+=term instanceof Add?"("+term.tex()+")":term.tex()})),numerator=tex||"1"}if(inverses.length){var denominator=new Mul(_.invoke(inverses,"asDivide")).flatten().tex();return negatives+"\\frac{"+numerator+"}{"+denominator+"}"}return negatives+numerator},strip:function(){var terms;return new Mul(_.map(this.terms,(function(term){return term instanceof Num?term.abs():term.strip()}))).flatten()},expand:function(){var isAdd=function(term){return term instanceof Add},isInverse=function(term){return term instanceof Pow&&term.exp.isNegative()},isInverseAdd=function(term){return isInverse(term)&&isAdd(term.base)},mul=this.recurse("expand").flatten(),hasAdd=_.any(mul.terms,isAdd),hasInverseAdd=_.any(mul.terms,isInverseAdd);if(!hasAdd&&!hasInverseAdd)return mul;var terms=_.groupBy(mul.terms,isInverse),normals=terms[!1]||[],inverses=terms[!0]||[],denominator;if(hasAdd){var grouped=_.groupBy(normals,isAdd),adds=grouped[!0]||[],others=grouped[!1]||[],expanded=_.reduce(adds,(function(expanded,add){return _.reduce(expanded,(function(temp,array){return temp.concat(_.map(add.terms,(function(term){return array.concat(term)})))}),[])}),[[]]),muls;normals=[new Add(_.map(expanded,(function(array){return new Mul(others.concat(array)).flatten()})))]}hasInverseAdd&&(inverses=[new Pow(new Mul(_.invoke(inverses,"getDenominator")).flatten().expand(),Num.Div)]);return new Mul(normals.concat(inverses)).flatten()},factor:function(options){var factored=this.recurse("factor",options).flatten();if(!(factored instanceof Mul))return factored;var grouped=_.groupBy(factored.terms,(function(term){return term instanceof Rational})),rational=_.reduce(grouped[!0],(function(memo,term){return{n:memo.n*term.n,d:memo.d*term.d}}),{n:1,d:1});return rational=1===rational.d?new Int(rational.n):new Rational(rational.n,rational.d),new Mul((grouped[!1]||[]).concat(rational)).flatten()},collect:function(options){var partitioned=this.recurse("collect",options).partition(),number=partitioned[0].reduce(options);if(0===number.eval())return Num.Zero;var others=partitioned[1].flatten();if(!(others instanceof Mul))return new Mul(number,others).flatten();others=others.terms;var pairs=[];_.each(others,(function(term){term instanceof Pow?pairs.push([term.base,term.exp]):pairs.push([term,Num.One])}));var grouped=_.groupBy(pairs,(function(pair){return pair[0].normalize().print()})),summed=_.compact(_.map(grouped,(function(pairs){var base=pairs[0][0],sum,exp=new Add(_.zip.apply(_,pairs)[1]).collect(options);return exp instanceof Num&&0===exp.eval()?null:[base,exp]}))),pairs,trigs=(pairs=_.groupBy(summed,(function(pair){return pair[0]instanceof Trig&&pair[0].isBasic()?"trig":pair[0]instanceof Log?"log":"expr"}))).trig||[],logs=pairs.log||[],exprs=pairs.expr||[];if(trigs.length>1){var byArg=_.groupBy(trigs,(function(pair){return pair[0].arg.normalize().print()}));trigs=[],_.each(byArg,(function(pairs){var arg=pairs[0][0].arg,funcs={sin:Num.Zero,cos:Num.Zero};_.each(pairs,(function(pair){funcs[pair[0].type]=pair[1]})),Mul.handleNegative(funcs.sin).collect(options).equals(funcs.cos)&&(funcs=funcs.cos.isNegative()?{tan:funcs.sin}:{cot:funcs.cos}),_.each(funcs,(function(exp,type){trigs.push([new Trig(type,arg),exp])}))}))}if(logs.length>1){var byBase=_.groupBy(logs,(function(pair){return pair[0].base.normalize().print()}));logs=[],_.each(byBase,(function(pairs){2===pairs.length&&Mul.handleNegative(pairs[0][1]).collect(options).equals(pairs[1][1])?pairs[0][1].isNegative()?logs.push([new Log(pairs[0][0].power,pairs[1][0].power),pairs[1][1]]):logs.push([new Log(pairs[1][0].power,pairs[0][0].power),pairs[0][1]]):logs=logs.concat(pairs)}))}pairs=trigs.concat(logs).concat(exprs);var collected=_.map(pairs,(function(pair){return new Pow(pair[0],pair[1]).collect(options)}));return new Mul([number].concat(collected)).flatten()},isSubtract:function(){return _.any(this.terms,(function(term){return term instanceof Num&&term.hints.subtract}))},factorIn:function(hint){var partitioned,numbers=this.partition()[0].terms,fold;if(numbers.length&&_.all(numbers,(function(num){return num.n>0}))){var num=numbers[0].negate();return num.hints=numbers[0].hints,this.replace(numbers[0],num.addHint(hint))}return new Mul([Num.negativeOne(hint)].concat(this.terms))},factorOut:function(){var factored=!1,terms=_.compact(_.map(this.terms,(function(term,i,list){return!factored&&term instanceof Num&&term.hints.divide?(factored=!0,-1!==term.n?term.negate():null):term})));return 1===terms.length?terms[0]:new Mul(terms)},reduce:function(options){return _.reduce(this.terms,(function(memo,term){return memo.mul(term,options)}),this.identity)},findGCD:function(factor){return new Mul(_.invoke(this.terms,"findGCD",factor)).flatten()},asMul:function(){return this},asPositiveFactor:function(){return this.isPositive()?this:new Mul(_.invoke(this.collect().terms,"asPositiveFactor")).flatten();var terms},isNegative:function(){return _.any(_.invoke(this.collect().terms,"isNegative"))},fold:function(){return Mul.fold(this)},negate:function(){var isNum=function(expr){return expr instanceof Num};if(_.any(this.terms,isNum)){var num=_.find(this.terms,isNum);return this.replace(num,num.negate())}return new Mul([Num.Neg].concat(this.terms))}}),_.each([Add,Mul],(function(type){_.extend(type,{createOrAppend:function(left,right){return left instanceof type?new type(left.terms.concat(right)):new type(left,right)}})})),_.extend(Mul,{handleNegative:function(expr,hint){if(expr instanceof Num&&expr.n>0){var negated=expr.negate();return negated.hints=expr.hints,negated.addHint(hint)}return expr instanceof Mul?expr.factorIn(hint):new Mul(Num.negativeOne(hint),expr)},handleDivide:function(left,right){if(right instanceof Mul){var first=Mul.handleDivide(left,right.terms[0]),rest=new Mul(_.rest(right.terms)).flatten();return Mul.handleDivide(first,rest)}var isInt=function(expr){return expr instanceof Int},isRational=function(expr){return expr instanceof Rational};if(isInt(right)&&left instanceof Mul&&_.any(left.terms,isInt)){var reversed=left.terms.slice().reverse(),num=_.find(reversed,isRational);if(!isInt(num))return new Mul(left.terms.concat([new Rational(1,right.n).addHint("fraction")]));var rational=new Rational(num.n,right.n),result;return rational.hints=num.hints,num===reversed[0]&&(rational=rational.addHint("fraction")),num.n<0&&right.n<0?(rational.d=-rational.d,left.replace(num,[Num.Neg,rational])):left.replace(num,rational)}var divide=function(a,b){if(b instanceof Int){if(a instanceof Int)return a.n<0&&b.n<0?[Num.Neg,new Rational(a.n,-b.n).addHint("fraction")]:[new Rational(a.n,b.n).addHint("fraction")];var inverse=new Rational(1,b.eval());return b.eval()<0?[a,inverse.addHint("negate")]:[a,inverse]}var pow;if(b instanceof Trig&&b.exp){var exp=b.exp;b.exp=void 0,b=new Pow(b,exp)}return pow=b instanceof Pow?new Pow(b.base,Mul.handleNegative(b.exp,"divide")):new Pow(b,Num.Div),a instanceof Int&&1===a.n?[pow]:[a,pow]},divided;if(left instanceof Mul){var divided=divide(_.last(left.terms),right);return new Mul(_.initial(left.terms).concat(divided))}return new Mul(divided=divide(left,right)).flatten()},fold:function(expr){if(expr instanceof Mul){var trigLog=_.find(_.initial(expr.terms),(function(term){return(term instanceof Trig||term instanceof Log)&&term.hints.open})),index=_.indexOf(expr.terms,trigLog);if(trigLog){var last=_.last(expr.terms),newTrigLog;if(!(trigLog.hints.parens||last.hints.parens||last.has(Trig)||last.has(Log)))return newTrigLog=trigLog instanceof Trig?Trig.create([trigLog.type,trigLog.exp],Mul.createOrAppend(trigLog.arg,last).fold()):Log.create(trigLog.base,Mul.createOrAppend(trigLog.power,last).fold()),0===index?newTrigLog:new Mul(expr.terms.slice(0,index).concat(newTrigLog)).fold();trigLog.hints.open=!1}var partitioned,numbers=expr.partition()[0].terms,pos=function(num){return num.n>0},neg=function(num){return-1===num.n&&num.hints.negate},posOrNeg=function(num){return pos(num)||neg(num)};if(numbers.length>1&&_.some(numbers,neg)&&_.some(numbers,pos)&&_.every(numbers,posOrNeg)){var firstNeg=_.indexOf(expr.terms,_.find(expr.terms,neg)),firstNum=_.indexOf(expr.terms,_.find(expr.terms,pos));if(firstNeg<firstNum)return expr.replace(firstNum,expr.terms[firstNum].negate()).remove(firstNeg)}}return expr}}),Pow.prototype=new Expr,_.extend(Pow.prototype,{func:Pow,args:function(){return[this.base,this.exp]},eval:function(vars,options){var evaledBase=this.base.eval(vars,options),evaledExp=this.exp.eval(vars,options);if(evaledBase<0){var simplifiedExp=this.exp.simplify(),oddDenominator,oddNumerator,sign;if(simplifiedExp instanceof Float){var num=simplifiedExp.n,decimals=(num-num.toFixed()).toString().length-2,denominator=Math.pow(10,decimals),rationalExp;simplifiedExp=new Rational(num*denominator,denominator).simplify()}if(simplifiedExp instanceof Rational)if(Math.abs(simplifiedExp.d)%2==1)return(Math.abs(simplifiedExp.n)%2==1?-1:1)*Math.pow(-1*evaledBase,evaledExp)}return Math.pow(evaledBase,evaledExp)},getUnits:function(){return this.base.getUnits().map(function(unit){return{unit:unit.unit,pow:unit.pow*this.exp.n}}.bind(this))},codegen:function(){return"Math.pow("+this.base.codegen()+", "+this.exp.codegen()+")"},print:function(){var base=this.base.print();return(this.base instanceof Seq||this.base instanceof Pow)&&(base="("+base+")"),base+"^("+this.exp.print()+")"},tex:function(){if(this.isDivide())return"\\frac{1}{"+this.asDivide().tex()+"}";if(this.isRoot())return 1!==this.exp.n&&error("Node marked with hint 'root' does not have exponent of form 1/x."),2===this.exp.d?"\\sqrt{"+this.base.tex()+"}":"\\sqrt["+this.exp.d+"]{"+this.base.tex()+"}";if(this.base instanceof Trig&&!this.base.isInverse()&&this.exp instanceof Num&&this.exp.isSimple()&&this.exp.eval()>=0){var split=this.base.tex({split:!0});return split[0]+"^{"+this.exp.tex()+"}"+split[1]}var base=this.base.tex();return this.base instanceof Seq||this.base instanceof Pow||this.base instanceof Num&&!this.base.isSimple()?base="("+base+")":(this.base instanceof Trig||this.base instanceof Log)&&(base="["+base+"]"),base+"^{"+this.exp.tex()+"}"},needsExplicitMul:function(){return!this.isRoot()&&this.base.needsExplicitMul()},expand:function(){var pow=this.recurse("expand"),terms,terms;if(pow.base instanceof Mul)return new Mul(terms=_.map(pow.base.terms,(function(term){return new Pow(term,pow.exp)}))).expand();if(pow.base instanceof Add&&pow.exp instanceof Int&&pow.exp.abs().eval()>1){for(var positive=pow.exp.eval()>0,n=pow.exp.abs().eval(),signed=function(mul){return positive?mul:new Pow(mul,Num.Div)},cache={1:pow.base},i=2;i<=n;i*=2){var mul=new Mul(cache[i/2],cache[i/2]);cache[i]=mul.expand().collect()}if(_.has(cache,n))return signed(cache[n]);var indices=_.map(n.toString(2).split(""),(function(str,i,list){return Number(str)*Math.pow(2,list.length-i-1)})),mul;return indices=_.without(indices,0),signed(mul=new Mul(_.pick(cache,indices)).expand().collect())}return pow.exp instanceof Add?new Mul(terms=_.map(pow.exp.terms,(function(term){return new Pow(pow.base,term).expand()}))).expand():pow},factor:function(){var pow=this.recurse("factor"),terms;return pow.base instanceof Mul?new Mul(_.map(pow.base.terms,(function(term){return term instanceof Int&&pow.exp.equals(Num.Div)?new Rational(1,term.n):new Pow(term,pow.exp)}))):pow},collect:function(options){var base,exp;if(this.base instanceof Pow)return new Pow(base=this.base.base,exp=Mul.createOrAppend(this.base.exp,this.exp)).collect(options);var pow=this.recurse("collect",options),isSimilarLog=function(term){return term instanceof Log&&term.base.equals(pow.base)};if(pow.exp instanceof Num&&0===pow.exp.eval())return Num.One;if(pow.exp instanceof Num&&1===pow.exp.eval())return pow.base;if(isSimilarLog(pow.exp))return pow.exp.power;if(pow.exp instanceof Mul&&_.any(pow.exp.terms,isSimilarLog)){var log=_.find(pow.exp.terms,isSimilarLog),base,exp;return new Pow(base=log.power,exp=pow.exp.remove(log).flatten()).collect(options)}if(pow.base instanceof Num&&pow.exp instanceof Num){if(options&&options.preciseFloats){var exp=pow.exp.asRational(),decimalsInBase=pow.base.getDecimalPlaces(),root,decimalsInRoot;if(new Pow(pow.base,new Rational(1,exp.d)).collect().getDecimalPlaces()>decimalsInBase){var newBase=new Pow(pow.base,new Int(exp.n)).collect();return new Pow(newBase,new Rational(1,exp.d))}}return pow.base.raiseToThe(pow.exp,options)}return pow},isDivide:function(){var isDiv=function(arg){return arg instanceof Num&&arg.hints.divide};return isDiv(this.exp)||this.exp instanceof Mul&&_.any(this.exp.terms,isDiv)},asDivide:function(){if(this.exp instanceof Num){if(-1===this.exp.eval())return this.base;var negated=this.exp.negate();return negated.hints=_.clone(this.exp.hints),negated.hints.divide=!1,new Pow(this.base,negated)}if(this.exp instanceof Mul)return new Pow(this.base,this.exp.factorOut());error("called asDivide() on an Expr that wasn't a Num or Mul")},isRoot:function(){return this.exp instanceof Rational&&this.exp.hints.root},isSquaredTrig:function(){return this.base instanceof Trig&&!this.base.isInverse()&&this.exp instanceof Num&&2===this.exp.eval()},getDenominator:function(){if(this.exp instanceof Num&&-1===this.exp.eval())return Mul.createOrAppend(this.base,this.base.getDenominator()).flatten();if(this.exp.isNegative()){var pow=new Pow(this.base,Mul.handleNegative(this.exp).collect());return Mul.createOrAppend(pow,pow.collect().getDenominator()).flatten()}return this.base instanceof Num?new Pow(this.base.getDenominator(),this.exp).collect():Num.One},findGCD:function(factor){var base,exp;if(factor instanceof Pow?(base=factor.base,exp=factor.exp):(base=factor,exp=Num.One),this.base.equals(base)){if(this.exp.equals(exp))return this;if(this.exp instanceof Num&&exp instanceof Num)return new Pow(this.base,Num.min(this.exp,exp)).collect();if(this.exp instanceof Num||exp instanceof Num)return Num.One;var expA=this.exp.asMul().partition(),expB=exp.asMul().partition(),coefficient,mul;if(expA[1].equals(expB[1]))return new Pow(base,new Mul(Num.min(expA[0].reduce(),expB[0].reduce()),expA[1].flatten()).flatten()).collect()}return Num.One},isPositive:function(){if(this.base.isPositive())return!0;var exp=this.exp.simplify();return exp instanceof Int&&exp.eval()%2==0},asPositiveFactor:function(){if(this.isPositive())return this;var exp=this.exp.simplify();if(exp instanceof Int){var n=exp.eval();if(n>2)return new Pow(this.base,new Int(n-1));if(n<-2)return new Pow(this.base,new Int(n+1))}return Num.One}}),_.extend(Pow,{sqrt:function(arg){return new Pow(arg,Num.Sqrt)},nthroot:function(radicand,degree){var exp;return new Pow(radicand,Mul.fold(Mul.handleDivide(new Int(1),degree)).addHint("root"))}}),Log.prototype=new Expr,_.extend(Log.prototype,{func:Log,args:function(){return[this.base,this.power]},eval:function(vars,options){return Math.log(this.power.eval(vars,options))/Math.log(this.base.eval(vars,options))},codegen:function(){return"(Math.log("+this.power.codegen()+") / Math.log("+this.base.codegen()+"))"},print:function(){var power="("+this.power.print()+")";return this.isNatural()?"ln"+power:"log_("+this.base.print()+") "+power},tex:function(){var power="("+this.power.tex()+")";return this.isNatural()?"\\ln"+power:"\\log_{"+this.base.tex()+"}"+power},collect:function(options){var log=this.recurse("collect",options);return log.power instanceof Num&&1===log.power.eval()?Num.Zero:log.base.equals(log.power)?Num.One:log.power instanceof Pow&&log.power.base.equals(log.base)?log.power.exp:log},expand:function(){var log=this.recurse("expand"),terms;return log.power instanceof Mul?new Add(_.map(log.power.terms,(function(term){return new Log(log.base,term).expand()}))):log.power instanceof Pow?new Mul(log.power.exp,new Log(log.base,log.power.base).expand()).flatten():log.isNatural()?log:Mul.handleDivide(new Log(Const.e,log.power),new Log(Const.e,log.base))},hints:_.extend(Log.prototype.hints,{open:!1}),isPositive:function(){var log=this.collect();return log.base instanceof Num&&log.power instanceof Num&&this.eval()>0},needsExplicitMul:function(){return!1},isNatural:function(){return this.base.equals(Const.e)}}),_.extend(Log,{natural:function(){return Const.e},common:function(){return Num.Ten},create:function(base,power){var log=new Log(base,power);return power.hints.parens||(log=log.addHint("open")),log}}),Trig.prototype=new Expr,_.extend(Trig.prototype,{func:Trig,args:function(){return[this.type,this.arg]},functions:{sin:{eval:Math.sin,codegen:"Math.sin((",tex:"\\sin",expand:function(){return this}},cos:{eval:Math.cos,codegen:"Math.cos((",tex:"\\cos",expand:function(){return this}},tan:{eval:Math.tan,codegen:"Math.tan((",tex:"\\tan",expand:function(){return Mul.handleDivide(Trig.sin(this.arg),Trig.cos(this.arg))}},csc:{eval:function(arg){return 1/Math.sin(arg)},codegen:"(1/Math.sin(",tex:"\\csc",expand:function(){return Mul.handleDivide(Num.One,Trig.sin(this.arg))}},sec:{eval:function(arg){return 1/Math.cos(arg)},codegen:"(1/Math.cos(",tex:"\\sec",expand:function(){return Mul.handleDivide(Num.One,Trig.cos(this.arg))}},cot:{eval:function(arg){return 1/Math.tan(arg)},codegen:"(1/Math.tan(",tex:"\\cot",expand:function(){return Mul.handleDivide(Trig.cos(this.arg),Trig.sin(this.arg))}},arcsin:{eval:Math.asin,codegen:"Math.asin((",tex:"\\arcsin"},arccos:{eval:Math.acos,codegen:"Math.acos((",tex:"\\arccos"},arctan:{eval:Math.atan,codegen:"Math.atan((",tex:"\\arctan"},arccsc:{eval:function(arg){return Math.asin(1/arg)},codegen:"Math.asin(1/(",tex:"\\operatorname{arccsc}"},arcsec:{eval:function(arg){return Math.acos(1/arg)},codegen:"Math.acos(1/(",tex:"\\operatorname{arcsec}"},arccot:{eval:function(arg){return Math.atan(1/arg)},codegen:"Math.atan(1/(",tex:"\\operatorname{arccot}"},sinh:{eval:function(arg){return(Math.exp(arg)-Math.exp(-arg))/2},codegen:function(argStr){return"((Math.exp("+argStr+") - Math.exp(-("+argStr+"))) / 2)"},tex:"\\sinh",expand:function(){return this}},cosh:{eval:function(arg){return(Math.exp(arg)+Math.exp(-arg))/2},codegen:function(argStr){return"((Math.exp("+argStr+") + Math.exp(-("+argStr+"))) / 2)"},tex:"\\cosh",expand:function(){return this}},tanh:{eval:function(arg){return(Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg))},codegen:function(argStr){return"((Math.exp("+argStr+") - Math.exp(-("+argStr+"))) / (Math.exp("+argStr+") + Math.exp(-("+argStr+"))))"},tex:"\\tanh",expand:function(){return Mul.handleDivide(Trig.sinh(this.arg),Trig.cosh(this.arg))}},csch:{eval:function(arg){return 2/(Math.exp(arg)-Math.exp(-arg))},codegen:function(argStr){return"(2 / (Math.exp("+argStr+") - Math.exp(-("+argStr+"))))"},tex:"\\csch",expand:function(){return Mul.handleDivide(Num.One,Trig.sinh(this.arg))}},sech:{eval:function(arg){return 2/(Math.exp(arg)+Math.exp(-arg))},codegen:function(argStr){return"(2 / (Math.exp("+argStr+") + Math.exp(-("+argStr+"))))"},tex:"\\sech",expand:function(){return Mul.handleDivide(Num.One,Trig.cosh(this.arg))}},coth:{eval:function(arg){return(Math.exp(arg)+Math.exp(-arg))/(Math.exp(arg)-Math.exp(-arg))},codegen:function(argStr){return"((Math.exp("+argStr+") + Math.exp(-("+argStr+"))) / (Math.exp("+argStr+") - Math.exp(-("+argStr+"))))"},tex:"\\coth",expand:function(){return Mul.handleDivide(Trig.cosh(this.arg),Trig.sinh(this.arg))}}},isEven:function(){return _.contains(["cos","sec"],this.type)},isInverse:function(){return 0===this.type.indexOf("arc")},isBasic:function(){return _.contains(["sin","cos"],this.type)},eval:function(vars,options){var func,arg;return(0,this.functions[this.type].eval)(this.arg.eval(vars,options))},codegen:function(){var func=this.functions[this.type].codegen;if("function"==typeof func)return func(this.arg.codegen());if("string"==typeof func)return func+this.arg.codegen()+"))";throw new Error("codegen not implemented for "+this.type)},print:function(){return this.type+"("+this.arg.print()+")"},tex:function(options){var func=this.functions[this.type].tex,arg="("+this.arg.tex()+")";return options&&options.split?[func,arg]:func+arg},hints:_.extend(Trig.prototype.hints,{open:!1}),isPositive:function(){var trig;return this.collect().arg instanceof Num&&this.eval()>0},completeParse:function(){if(this.exp){var pow=new Pow(this,this.exp);return this.exp=void 0,pow}return this},needsExplicitMul:function(){return!1},expand:function(){var trig=this.recurse("expand");if(trig.isInverse())return trig;var expand=trig.functions[trig.type].expand;return _.bind(expand,trig)()},collect:function(options){var trig=this.recurse("collect",options),arg;return!trig.isInverse()&&trig.arg.isNegative()?(arg=trig.arg instanceof Num?trig.arg.abs():Mul.handleDivide(trig.arg,Num.Neg).collect(options),trig.isEven()?new Trig(trig.type,arg):new Mul(Num.Neg,new Trig(trig.type,arg))):trig}}),_.extend(Trig,{create:function(pair,arg){var type=pair[0],exp=pair[1];exp&&exp.equals(Num.Neg)&&(type="arc"+type,exp=void 0);var trig=new Trig(type,arg);return arg.hints.parens||(trig=trig.addHint("open")),exp&&(trig.exp=exp),trig},sin:function(arg){return new Trig("sin",arg)},cos:function(arg){return new Trig("cos",arg)},sinh:function(arg){return new Trig("sinh",arg)},cosh:function(arg){return new Trig("cosh",arg)}}),Abs.prototype=new Expr,_.extend(Abs.prototype,{func:Abs,args:function(){return[this.arg]},eval:function(vars,options){return Math.abs(this.arg.eval(vars,options))},codegen:function(){return"Math.abs("+this.arg.codegen()+")"},print:function(){return"abs("+this.arg.print()+")"},tex:function(){return"\\left|"+this.arg.tex()+"\\right|"},collect:function(options){var abs=this.recurse("collect",options);if(abs.arg.isPositive())return abs.arg;if(abs.arg instanceof Num)return abs.arg.abs();if(abs.arg instanceof Mul){var terms=_.groupBy(abs.arg.terms,(function(term){return term.isPositive()?"positive":term instanceof Num?"number":"other"})),positives=terms.positive.concat(_.invoke(terms.number,"abs"));return terms.other.length&&positives.push(new Abs(new Mul(terms.other).flatten())),new Mul(positives).flatten()}return abs},expand:function(){var abs=this.recurse("expand"),terms;return abs.arg instanceof Mul?new Mul(_.map(abs.arg.terms,(function(term){return new Abs(term)}))):abs},isPositive:function(){return!0}}),Eq.prototype=new Expr,_.extend(Eq.prototype,{func:Eq,args:function(){return[this.left,this.type,this.right]},needsExplicitMul:function(){return!1},print:function(){return this.left.print()+this.type+this.right.print()},signs:{"=":" = ","<":" < ",">":" > ","<>":" \\ne ","<=":" \\le ",">=":" \\ge "},tex:function(){return this.left.tex()+this.signs[this.type]+this.right.tex()},normalize:function(){var eq=this.recurse("normalize");return _.contains([">",">="],eq.type)?new Eq(eq.right,eq.type.replace(">","<"),eq.left):eq},asExpr:function(unfactored){var isZero=function(expr){return expr instanceof Num&&expr.isSimple()&&0===expr.eval()},terms=[];this.left instanceof Add?terms=_.clone(this.left.terms):isZero(this.left)||(terms=[this.left]),this.right instanceof Add?terms=terms.concat(this.right.negate().terms):isZero(this.right)||terms.push(this.right.negate());var isInequality=!this.isEquality();terms=_.invoke(terms,"collect",{preciseFloats:!0});for(var i=0;i<terms.length;i++){var denominator=terms[i].getDenominator();isInequality&&!denominator.isPositive()&&(denominator=denominator.asPositiveFactor()),denominator.equals(Num.One)||(terms=_.map(terms,(function(term){return Mul.createOrAppend(term,denominator).simplify({once:!0,preciseFloats:!0})})))}var add=new Add(terms).flatten();return unfactored?add:this.divideThrough(add)},divideThrough:function(expr){var isInequality=!this.isEquality(),simplified=expr.simplify({once:!0}),factored=simplified.factor({keepNegative:isInequality});if(!(factored instanceof Mul))return expr;var terms=factored.terms,isAdd=function(term){return term instanceof Add},hasVar=function(term){return!!term.getVars().length},isOne=function(term){return term.equals(Num.One)},grouped=_.groupBy(terms,isAdd),adds=grouped[!0]||[],others=grouped[!1]||[];if(adds.length&&this.isEquality())return new Mul(adds).flatten();var denominator=others;adds.length||(denominator=_.reject(denominator,hasVar)),isInequality&&(denominator=_.invoke(denominator,"asPositiveFactor")),denominator=_.reject(denominator,isOne),denominator=_.map(denominator,(function(term){return new Pow(term,Num.Div)}));var dividedResult=new Mul(terms.concat(denominator)).collect();return dividedResult.equals(factored)?simplified:dividedResult},isEquality:function(){return _.contains(["=","<>"],this.type)},compare:function(other){if(!(other instanceof Eq))return!1;var eq1=this.normalize(),eq2=other.normalize();if(eq1.type!==eq2.type)return!1;var expr1=eq1.divideThrough(eq1.asExpr(!0).collect()),expr2=eq2.divideThrough(eq2.asExpr(!0).collect());return eq1.isEquality()?expr1.compare(expr2)||expr1.compare(Mul.handleNegative(expr2)):expr1.compare(expr2)},sameForm:function(other){var eq1=this.normalize(),eq2=other.normalize(),same=eq1.left.sameForm(eq2.left)&&eq1.right.sameForm(eq2.right);return eq1.isEquality()?same||eq1.left.sameForm(eq2.right)&&eq1.right.sameForm(eq2.left):same},isSimplified:function(){var expr=this.asExpr(!0),simplified=this.divideThrough(expr).simplify();return expr.equals(simplified)&&this.left.isSimplified()&&this.right.isSimplified()}}),_.extend(Eq.prototype,{solveLinearEquationForVariable:function(variable){var expr=this.asExpr(),hasVar,a,b;if(!expr.is(Add)||2!==expr.terms.length)throw new Error("Can only handle linear equations of the form a + bx (= 0)");return function(term){return term.has(Var)&&_.contains(term.getVars(),variable.symbol)}(expr.terms[0])?(a=Mul.handleNegative(expr.terms[1]),b=Mul.handleDivide(expr.terms[0],variable)):(a=Mul.handleNegative(expr.terms[0]),b=Mul.handleDivide(expr.terms[1],variable)),Mul.handleDivide(a,b).simplify()}}),Symbol.prototype=new Expr,_.extend(Symbol.prototype,{needsExplicitMul:function(){return!1},findGCD:function(factor){return factor instanceof Symbol||factor instanceof Num?this.equals(factor)?this:Num.One:factor.findGCD(this)}}),Func.prototype=new Symbol,_.extend(Func.prototype,{func:Func,args:function(){return[this.symbol,this.arg]},print:function(){return this.symbol+"("+this.arg.print()+")"},tex:function(){return this.symbol+"("+this.arg.tex()+")"},eval:function(vars,options){var arg=this.arg,func=vars[this.symbol],newVars=_.extend(_.clone(vars),{x:arg.eval(vars,options)}),parsedFunc=KAS.parse(func,options);return parsedFunc.parsed?parsedFunc.expr.eval(newVars,options):parsedFunc},codegen:function(){return'vars["'+this.symbol+'"]('+this.arg.codegen()+")"},getUnits:function(){return this.arg.getUnits()},getVars:function(excludeFunc){return excludeFunc?this.arg.getVars():_.union(this.arg.getVars(),[this.symbol]).sort()},getConsts:function(){return this.arg.getConsts()}}),Var.prototype=new Symbol,_.extend(Var.prototype,{func:Var,args:function(){return[this.symbol,this.subscript]},exprArgs:function(){return[]},recurse:function(){return this},print:function(){var sub="";return this.subscript&&(sub="_("+this.subscript.print()+")"),this.symbol+sub},prettyPrint:function(){var sub=this.subscript;return sub&&(sub instanceof Num||sub instanceof Symbol)?this.symbol+"_"+sub.print():this.print()},tex:function(){var sub="",prefix;return this.subscript&&(sub="_{"+this.subscript.tex()+"}"),(this.symbol.length>1?"\\":"")+this.symbol+sub},repr:function(){return"Var("+this.print()+")"},eval:function(vars,options){return vars[this.prettyPrint()]},codegen:function(){return'vars["'+this.prettyPrint()+'"]'},getVars:function(){return[this.prettyPrint()]},isPositive:function(){return!1}}),Const.prototype=new Symbol,_.extend(Const.prototype,{func:Const,args:function(){return[this.symbol]},recurse:function(){return this},eval:function(vars,options){return"pi"===this.symbol?Math.PI:"e"===this.symbol?Math.E:void 0},codegen:function(){return"pi"===this.symbol?"Math.PI":"e"===this.symbol?"Math.E":void 0},print:function(){return this.symbol},tex:function(){return"pi"===this.symbol?"\\pi ":"e"===this.symbol?"e":void 0},isPositive:function(){return this.eval()>0},abs:function(){return this.eval()>0?this:Mul.handleNegative(this)},getConsts:function(){return[this.print()]}}),Const.e=new Const("e"),Const.pi=new Const("pi"),Num.prototype=new Expr,_.extend(Num.prototype,{repr:function(){return this.print()},strip:function(){return this.abs()},recurse:function(){return this},codegen:function(){return this.print()},add:abstract,mul:abstract,negate:abstract,isSubtract:function(){return this.hints.subtract},abs:abstract,needsExplicitMul:function(){return!0},findGCD:abstract,isPositive:function(){return this.eval()>0},isNegative:function(){return this.eval()<0},asPositiveFactor:function(){return this.isPositive()?this:this.abs()},hints:_.extend(Num.prototype.hints,{negate:!1,subtract:!1,divide:!1,root:!1,fraction:!1,entered:!1}),isSimple:abstract,getDecimalPlaces:function(){var match=(""+this.n).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return match?Math.max(0,(match[1]?match[1].length:0)-(match[2]?+match[2]:0)):0},asRational:abstract}),Rational.prototype=new Num,_.extend(Rational.prototype,{func:Rational,args:function(){return[this.n,this.d]},eval:function(){return this.n/this.d},print:function(){return this.n.toString()+"/"+this.d.toString()},tex:function(){var tex="\\frac{"+Math.abs(this.n).toString()+"}{"+this.d.toString()+"}";return this.n<0?"-"+tex:tex},add:function(num,options){return num instanceof Rational?new Rational(this.n*num.d+this.d*num.n,this.d*num.d).collect():num.add(this,options)},mul:function(num,options){return num instanceof Rational?new Rational(this.n*num.n,this.d*num.d).collect():num.mul(this,options)},collect:function(){var gcd=Num.findGCD(this.n,this.d),n=this.n/gcd,d=this.d/gcd;return 1===d?new Int(n):new Rational(n,d)},negate:function(){return new Rational(-this.n,this.d)},abs:function(){return new Rational(Math.abs(this.n),this.d)},findGCD:function(factor){var numerator,denominator;return factor instanceof Rational?new Rational(Num.findGCD(this.n*factor.d,factor.n*this.d),this.d*factor.d).collect():factor instanceof Int?new Rational(Num.findGCD(this.n,factor.n),this.d):factor.findGCD(this)},raiseToThe:function(exp){if(exp instanceof Int){var positive=exp.eval()>0,abs=exp.abs().eval(),n=Math.pow(this.n,abs),d=Math.pow(this.d,abs);return positive?new Rational(n,d).collect():new Rational(d,n).collect()}return new Float(this.eval()).raiseToThe(exp)},getDenominator:function(){return new Int(this.d)},isSimple:function(){return!1},asRational:function(){return this}}),Int.prototype=new Rational(0,1),_.extend(Int.prototype,{func:Int,args:function(){return[this.n]},print:function(){return this.n.toString()},tex:function(){return this.n.toString()},negate:function(){return new Int(-this.n)},abs:function(){return new Int(Math.abs(this.n))},isSimple:function(){return!0},findGCD:function(factor){return factor instanceof Int?new Int(Num.findGCD(this.n,factor.n)):factor.findGCD(this)}}),_.extend(Int,{create:function(n){return new Int(n).addHint("entered")}}),Float.prototype=new Num,_.extend(Float.prototype,{func:Float,args:function(){return[this.n]},eval:function(){return this.n},print:function(){return this.n.toString()},tex:function(){return this.n.toString()},add:function(num,options){return options&&options.preciseFloats?Float.toDecimalPlaces(this.n+num.eval(),Math.max(this.getDecimalPlaces(),num.getDecimalPlaces())):new Float(this.n+num.eval()).collect()},mul:function(num,options){return options&&options.preciseFloats?Float.toDecimalPlaces(this.n*num.eval(),this.getDecimalPlaces()+num.getDecimalPlaces()):new Float(this.n*num.eval()).collect()},collect:function(){return this},negate:function(){return new Float(-this.n)},abs:function(){return new Float(Math.abs(this.n))},findGCD:function(factor){return factor instanceof Num?new Float(Num.findGCD(this.eval(),factor.eval())).collect():factor.findGCD(this)},raiseToThe:function(exp,options){return options&&options.preciseFloats&&exp instanceof Int&&exp.n>1?Float.toDecimalPlaces(new Pow(this,exp).eval(),this.getDecimalPlaces()*exp.n):new Float(new Pow(this,exp).eval()).collect()},asRational:function(){var parts=this.n.toString().split("."),numerator,denominator;return 1===parts.length?new Rational(this.n,1):new Rational(Number(parts.join("")),Math.pow(10,parts[1].length)).collect()},getDenominator:function(){return this.asRational().getDenominator()},isSimple:function(){return!0}}),_.extend(Float,{create:function(n){return new Float(n).addHint("entered")},toDecimalPlaces:function(n,places){return new Float(+n.toFixed(Math.min(places,20))).collect()}}),_.extend(Num,{negativeOne:function(hint){return"subtract"===hint?Num.Sub:"divide"===hint?Num.Div:Num.Neg},findGCD:function(a,b){var mod;if(a=Math.abs(a),b=Math.abs(b),a!==Math.floor(a)||b!==Math.floor(b))return 1;for(;b;)mod=a%b,a=b,b=mod;return a},min:function(){return _.min(_.toArray(arguments),(function(num){return num.eval()}))},max:function(){return _.max(_.toArray(arguments),(function(num){return num.eval()}))}}),Num.Neg=new Int(-1).addHint("negate"),Num.Sub=new Int(-1).addHint("subtract"),Num.Div=new Int(-1).addHint("divide"),Num.Sqrt=new Rational(1,2).addHint("root"),Num.Zero=new Int(0),Num.One=new Int(1),Num.Ten=new Int(10),Add.prototype.identity=Num.Zero,Mul.prototype.identity=Num.One;var parser=KAS.parser,parseError=function(str,hash){throw new Error(hash.loc.first_column)};function Unit(symbol){this.symbol=symbol}parser.yy={Add:Add,Mul:Mul,Pow:Pow,Log:Log,Trig:Trig,Eq:Eq,Abs:Abs,Func:Func,Const:Const,Var:Var,Int:Int,Float:Float,parseError:parseError,constants:["e"],symbolLexer:function(symbol){return _.contains(parser.yy.constants,symbol)?"CONST":_.contains(parser.yy.functions,symbol)?"FUNC":"VAR"}},KAS.parse=function(input,options){try{var expr;return options&&options.functions?parser.yy.functions=_.without(options.functions,"i"):parser.yy.functions=[],options&&options.decimal_separator&&(input=input.split(options.decimal_separator).join(".")),{parsed:!0,expr:parser.parse(input).completeParse()}}catch(e){return{parsed:!1,error:e.message}}},Unit.prototype=new Symbol;var unprefixify=function(symbol){if(_(baseUnits).has(symbol)||_(derivedUnits).has(symbol))return new Unit(symbol);var prefix=_(_(siPrefixes).keys()).find((function(testPrefix){return new RegExp("^"+testPrefix).test(symbol)}));if(prefix){var base=symbol.replace(new RegExp("^"+prefix),"");if(_(baseUnits).has(base)||derivedUnits[base]&&derivedUnits[base].prefixes===hasPrefixes)return new Mul(siPrefixes[prefix],new Unit(base));throw new Error(base+" does not allow prefixes")}return new Unit(symbol)};KAS.unitParse=function(input){try{var parseResult=KAS.unitParser.parse(input),unitArray=[];_(parseResult.unit.num).each((function(unitSpec){unitArray.push(new Pow(unprefixify(unitSpec.name),new Int(unitSpec.pow)))})),_(parseResult.unit.denom).each((function(unitSpec){unitArray.push(new Pow(unprefixify(unitSpec.name),new Int(-1*unitSpec.pow)))}));var unit=new Mul(unitArray).flatten(),coefArray,expr;return"unitMagnitude"===parseResult.type?{parsed:!0,unit:unit,expr:new Mul([new Float(+parseResult.magnitude)].concat(unitArray)),coefficient:parseResult.magnitude,type:parseResult.type}:{parsed:!0,unit:unit,type:parseResult.type}}catch(e){return{parsed:!1,error:e.message}}},_.extend(Unit.prototype,{func:Unit,args:function(){return[this.symbol]},recurse:function(){return this},eval:function(vars,options){return 1},getUnits:function(){return[{unit:this.symbol,pow:1}]},codegen:function(){return"1"},print:function(){return this.symbol},tex:function(){return this.symbol},collect:function(options){if(_(baseUnits).has(this.symbol))return this;if(_(derivedUnits).has(this.symbol))return derivedUnits[this.symbol].conversion;throw new Error("could not understand unit: "+this.symbol)}});var baseUnits={m:new Unit("m"),g:new Unit("g"),s:new Unit("s"),A:new Unit("A"),K:new Unit("K"),mol:new Unit("mol"),cd:new Unit("cd")},siPrefixes={a:new Pow(new Int(10),new Int(-18)),f:new Pow(new Int(10),new Int(-15)),p:new Pow(new Int(10),new Int(-12)),n:new Pow(new Int(10),new Int(-9)),u:new Pow(new Int(10),new Int(-6)),m:new Pow(new Int(10),new Int(-3)),c:new Pow(new Int(10),new Int(-2)),d:new Pow(new Int(10),new Int(-1)),da:new Int(10),h:new Pow(new Int(10),new Int(2)),k:new Pow(new Int(10),new Int(3)),M:new Pow(new Int(10),new Int(6)),G:new Pow(new Int(10),new Int(9)),T:new Pow(new Int(10),new Int(12)),P:new Pow(new Int(10),new Int(15)),E:new Pow(new Int(10),new Int(18)),hella:new Pow(new Int(10),new Int(27))},hasPrefixes={},hasntPrefixes={},makeAlias=function(str,prefixes){var splits=str.split("|"),coefficientStr=splits[0].trim(),unitsStr=splits[1].trim(),coefficient=Num.One;""!==coefficientStr&&(coefficient=KAS.parse(coefficientStr).expr);var numdenomStr=unitsStr.split("/"),numdenom=[coefficient];return numdenomStr[0]&&numdenomStr[0].split(" ").filter((function(x){return""!==x})).map((function(x){numdenom.push(new Unit(x))})),numdenomStr[1]&&numdenomStr[1].split(" ").filter((function(x){return""!==x})).map((function(x){numdenom.push(new Pow(new Unit(x),Num.Div))})),{conversion:new Mul(numdenom),prefixes:prefixes}},derivedUnits={Da:makeAlias("1.6605388628 x 10^-24 | g",hasPrefixes),u:makeAlias("| Da",hasntPrefixes),meter:makeAlias("| m",hasntPrefixes),meters:makeAlias("| m",hasntPrefixes),in:makeAlias("254 / 10000 | m",hasntPrefixes),ft:makeAlias("3048  / 10000 | m",hasntPrefixes),yd:makeAlias("9144  / 10000 | m",hasntPrefixes),mi:makeAlias("1609344 / 1000 | m",hasntPrefixes),ly:makeAlias("9.4607 x 10^15 | m",hasntPrefixes),nmi:makeAlias("1852 | m",hasntPrefixes),"Å":makeAlias("10^-10 | m",hasntPrefixes),pc:makeAlias("3.0857 x 10^16 | m",hasntPrefixes),min:makeAlias("60 | s",hasntPrefixes),hr:makeAlias("3600 | s",hasntPrefixes),sec:makeAlias("| s",hasntPrefixes),day:makeAlias("86400 | s",hasntPrefixes),wk:makeAlias("604800 | s",hasntPrefixes),fortnight:makeAlias("14 | day",hasntPrefixes),shake:makeAlias("10^-8 | s",hasntPrefixes),olympiad:makeAlias("126200000 | s",hasntPrefixes),"°C":makeAlias("1 | K",hasntPrefixes),"°F":makeAlias("5/9 | K",hasntPrefixes),"°R":makeAlias("5/9 | K",hasntPrefixes),e:makeAlias("1.6021765314 x 10^-19 | C",hasntPrefixes),c:makeAlias("299792458 | m / s",hasntPrefixes),kn:makeAlias("514/1000 | m / s",hasntPrefixes),kt:makeAlias("| kn",hasntPrefixes),knot:makeAlias("| kn",hasntPrefixes),J:makeAlias("| N m",hasPrefixes),BTU:makeAlias("1060 | J",hasntPrefixes),cal:makeAlias("4184 / 1000 | J",hasPrefixes),eV:makeAlias("1.602176514 x 10^-19 | J",hasPrefixes),erg:makeAlias("10^−7 | J",hasPrefixes),W:makeAlias("| J / s",hasPrefixes),"H-e":makeAlias("80 | W",hasntPrefixes),N:makeAlias("1000 | g m / s s",hasPrefixes),lb:makeAlias("4448221615 / 1000000000 | N",hasntPrefixes),dyn:makeAlias("10^-5 | N",hasntPrefixes),Pa:makeAlias("1 | N / m m m",hasPrefixes),bar:makeAlias("10^5 | Pa",hasPrefixes),"㏔":makeAlias("1/1000 | bar",hasntPrefixes),"㍴":makeAlias("| bar",hasntPrefixes),atm:makeAlias("101325 | Pa",hasntPrefixes),Torr:makeAlias("1/760 | atm",hasntPrefixes),mmHg:makeAlias("| Torr",hasntPrefixes),ha:makeAlias("10^4 | m m",hasntPrefixes),b:makeAlias("10^−28 | m m",hasPrefixes),barn:makeAlias("| b",hasPrefixes),acre:makeAlias("4046.87 | m m",hasntPrefixes),skilodge:makeAlias("10^-31 | m m",hasntPrefixes),outhouse:makeAlias("10^-34 | m m",hasntPrefixes),shed:makeAlias("10^-52 | m m",hasntPrefixes),L:makeAlias("1/1000 | m m m",hasPrefixes),gal:makeAlias("3785/1000 | L",hasPrefixes),cup:makeAlias("1/16 | gal",hasntPrefixes),qt:makeAlias("1/4 | gal",hasntPrefixes),quart:makeAlias("| qt",hasntPrefixes),p:makeAlias("1/8 | gal",hasntPrefixes),pt:makeAlias("| p",hasntPrefixes),pint:makeAlias("| p",hasntPrefixes),"fl oz":makeAlias("1/8 | cup",hasntPrefixes),"fl. oz.":makeAlias("1/8 | cup",hasntPrefixes),tbsp:makeAlias("1/16 | cup",hasntPrefixes),tsp:makeAlias("1/3 | tbsp",hasntPrefixes),rev:makeAlias("2 pi | rad",hasntPrefixes),deg:makeAlias("180 pi | rad",hasntPrefixes),"°":makeAlias("| deg",hasntPrefixes),arcminute:makeAlias("1/60 | deg",hasntPrefixes),arcsec:makeAlias("1/3600 | deg",hasntPrefixes),Hu:makeAlias("1000 | dB",hasPrefixes),dozen:makeAlias("12 |",hasntPrefixes),mol:makeAlias("6.0221412927 x 10^23 |",hasPrefixes),"%":makeAlias("1/100 |",hasntPrefixes),percent:makeAlias("| %",hasntPrefixes),ppm:makeAlias("1/1000000 |",hasntPrefixes),V:makeAlias("1000 | g m m / s s C",hasPrefixes),C:makeAlias("| A s",hasPrefixes),ampere:makeAlias("| A",hasntPrefixes),"Ω":makeAlias("| V / A",hasPrefixes),ohm:makeAlias("| Ω",hasntPrefixes),F:makeAlias("| C / V",hasPrefixes),H:makeAlias("| ohm s",hasPrefixes),T:makeAlias("1000 | g / C s",hasPrefixes),Wb:makeAlias("1000 | g m m / C s",hasPrefixes),lm:makeAlias("pi x 10^4 | cd / m m",hasntPrefixes),lx:makeAlias("| lm / m m",hasntPrefixes),nit:makeAlias("| cd / m m",hasntPrefixes),sb:makeAlias("10^4 | cd / m m",hasntPrefixes),stilb:makeAlias("1 | sb",hasntPrefixes),apostilb:makeAlias("1 / pi x 10^(-4) | sb",hasntPrefixes),blondel:makeAlias("| apostilb",hasntPrefixes),asb:makeAlias("| apostilb",hasntPrefixes),la:makeAlias("| lm",hasntPrefixes),Lb:makeAlias("| lm",hasntPrefixes),sk:makeAlias("10^-7 | lm",hasntPrefixes),skot:makeAlias("| sk",hasntPrefixes),bril:makeAlias("10^-11 | lm",hasntPrefixes),Hz:makeAlias("| / s",hasPrefixes)};KAS.Add=Add,KAS.Mul=Mul,KAS.Pow=Pow,KAS.Log=Log,KAS.Eq=Eq,KAS.Trig=Trig,KAS.Abs=Abs,KAS.Func=Func,KAS.Var=Var,KAS.Const=Const,KAS.Unit=Unit,KAS.Rational=Rational,KAS.Int=Int,KAS.Float=Float,KAS.Zero=Num.Zero,KAS.One=Num.One}(KAS),function(KAS){KAS.compare=function(expr1,expr2,options){var defaults={form:!1,simplify:!1};options=void 0!==options?_.extend(defaults,options):defaults;var vars=expr1.sameVars(expr2),message;return vars.equal?expr1.compare(expr2)?options.form&&!expr1.sameForm(expr2)?{equal:!1,message:"Your answer is not in the correct form."}:options.simplify&&!expr1.isSimplified()?{equal:!1,message:"Your answer is not fully expanded and simplified."}:{equal:!0,message:null}:{equal:!1,message:null}:(message=vars.equalIgnoringCase?"Check your variables; one or more are using the wrong case (upper or lower).":"Check your variables; you may have used the wrong letter for one or more of them.",{equal:!1,wrongVariableCase:vars.equalIgnoringCase,wrongVariableNames:!vars.equalIgnoringCase,message:message})}}(KAS);